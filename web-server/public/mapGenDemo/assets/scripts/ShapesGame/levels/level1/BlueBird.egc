<?xml version="1.0" encoding="utf-8"?>
<Entity extends="std.display.Sprite2D">
	<_States>
		<_State id="name"><Value>Blue Bird</Value></_State>
		<_State id="spaceX"><Value>950</Value></_State>
		<_State id="spaceY"><Value>620</Value></_State>
	</_States>

	<Form><Space><Entities>
		<Entity extends="std.display.Spritesheet2D">
			<_States>
				<_State id="name"><Value>Blue Bird Fly</Value></_State>
				<_State id="2DMeshSpritesheetForm"><Value>[SpritesheetMain]</Value></_State>
			</_States>
			
			<_Form>
				<_States>
					<State>
						<Id>SpritesheetMain</Id>
						<Type>Text</Type>
						<Value>blueBird</Value>
					</State>
				</_States>
			</_Form>
		</Entity>
		<Entity extends="std.display.Spritesheet2D">
			<_States>
				<_State id="name"><Value>Blue Bird Stand</Value></_State>
				<_State id="2DMeshSpritesheetForm"><Value>[SpritesheetMain]</Value></_State>
				<_State id="visible"><Value>false</Value></_State>
				<_State id="scaleX"><Value>1</Value></_State>
				<_State id="scaleY"><Value>1</Value></_State>
				<_State id="spaceX"><Value>-10</Value></_State>
				<_State id="spaceY"><Value>25</Value></_State>
				<_State id="AnimationSpeed"><Value>180</Value></_State>
			</_States>
			
			<_Form>
				<_States>
					<State>
						<Id>SpritesheetMain</Id>
						<Type>Text</Type>
						<Value>blueBirdStand</Value>
					</State>
				</_States>
			</_Form>
		</Entity>
	</Entities></Space></Form>
	
	<_Actions>
		<Action>
			<Id>Animate</Id>
			<Concurrency>Persistent</Concurrency>
			<Scripts>
				<Script>
					//force
					
					if (it.s('state')=="Stand")
					{
						e('Blue Bird Fly').setState('visible',false);
						e('Blue Bird Stand').setState('visible',true);
					}
					else if (it.s('state')=="Fly")
					{
						e('Blue Bird Fly').setState('visible',true);
						e('Blue Bird Stand').setState('visible',false);
					}
				</Script>
			</Scripts>
			<States>
				<State><Id>state</Id><Type>Text</Type><Value>Stand</Value></State>
			</States>
		</Action>
		
		<Action>
			<Id>Jump Up</Id>
			<Concurrency>Persistent</Concurrency>
			<Scripts>
				<Script>
					//forced
					
					me.setState('animate_y',{type:"by", by:-30, seconds:0.8, easing:Ease.quadInOut});
					me.fa('Animate',{state:"Fly"});
					me.sa('WaitFor',{delay:0.8, cbEntity:me, cbAction:"Jump Down"});
				</Script>
			</Scripts>
		</Action>
				
		<Action>
			<Id>Jump Down</Id>
			<Concurrency>Persistent</Concurrency>
			<Scripts>
				<Script>
					//force
					
					me.setState('animate_y',{type:"by", by:30, seconds:0.8, easing:Ease.quadInOut});
					me.sa('WaitFor',{delay:0.8, cbEntity:me, cbAction:"Stand"});
				</Script>
			</Scripts>
		</Action>
				
		<Action>
			<Id>Nod Up</Id>
			<Concurrency>Persistent</Concurrency>
			<Scripts>
				<Script>
					//forced
					
					me.setState('animate_y',{type:"by", by:-14, seconds:0.2, easing:Ease.quadInOut});
					me.sa('WaitFor',{delay:0.2, cbEntity:me, cbAction:"Nod Down"});
				</Script>
			</Scripts>
		</Action>
				
		<Action>
			<Id>Nod Down</Id>
			<Concurrency>Persistent</Concurrency>
			<Scripts>
				<Script>
					//force
					
					me.setState('animate_y',{type:"by", by:14, seconds:0.2, easing:Ease.quadInOut});
				</Script>
			</Scripts>
		</Action>
				
		<Action>
			<Id>Stand</Id>
			<Concurrency>Persistent</Concurrency>
			<Scripts>
				<Script>
					//force
					
					me.fa('Animate',{state:"Stand"});
				</Script>
			</Scripts>
		</Action>
				
		<Action>
			<Id>WaitFor</Id>
			<Concurrency>Persistent</Concurrency>
			<Scripts>
				<Script><![CDATA[
				    it.addToState('delayCurrent',Logic.getDt());
				    
				    if (it.getState('delayCurrent')>it.getState('delay'))
				    {
					    it.stop();
					    
					    //Callback (Action finished)
						it.setState('delayCurrent',0);
						it.s('cbEntity').fa(it.s('cbAction'));
					}
				]]></Script>
			</Scripts>
			<States>
				<State><Id>delayCurrent</Id><Type>Decimal</Type><Value>0</Value></State>
				<State><Id>delay</Id><Type>Decimal</Type><Value>0</Value></State>
				<State><Id>cbEntity</Id><Type>Dynamic</Type><Value>null</Value></State>
				<State><Id>cbAction</Id><Type>Text</Type><Value>Undefined</Value></State>
			</States>
		</Action>
	</_Actions>
</Entity>