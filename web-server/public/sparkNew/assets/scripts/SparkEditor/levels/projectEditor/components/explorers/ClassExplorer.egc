<Entity extends="std.display.HGroup">
	<_States>
		<_State id="width"><Value>100%</Value></_State>
		<_State id="height"><Value>100%</Value></_State>
		<_State id="gap"><Value>0</Value></_State>
		<State><Id>parentEditor</Id><Type>Dynamic</Type><Value>null</Value></State>
		<State><Id>descriptor</Id><Type>Dynamic</Type><Value>null</Value></State>
		<State><Id>tabManager</Id><Type>Dynamic</Type><Value>null</Value></State>
	</_States>

	<Form><Space><Entities>

	</Entities></Space></Form>

	<_Triggers>

	</_Triggers>

	<_Actions>
		<Action>
			<Id>Forced Constructor</Id>
			<Concurrency>Persistent</Concurrency>
			<Scripts>
				<Script>
					//forced
					
					//Create Descriptor
					var l_descriptor = Logic.create("SparkEditor.levels.projectEditor.components.explorers.ClassExplorerDescriptor");
					l_descriptor.set('parentClassExplorer', me);
					me.set('descriptor', l_descriptor);
					me.addChild(l_descriptor);
					
					//Initialize
					l_descriptor.fa('Forced Constructor');
					
					
					//Create Tab Manager
					var l_tabManager = Logic.create("SparkEditor.levels.projectEditor.components.explorers.ClassExplorerTabManager");
					l_tabManager.set('parentClassExplorer', me);
					me.set('tabManager', l_tabManager);
					me.addChild(l_tabManager);
					
					//Initialize
					l_tabManager.fa('Initialize');
					
					//So.. hey mr tab manager..  I'm your class explorer... use my editor to create your tabs.. and when you are updated, or its time to export/save, we'll talk again
					l_tabManager.fa('Construct States Explorers');
				</Script>
			</Scripts>
		</Action>
	
		<Action>
			<Id>Show</Id>
			<Concurrency>Persistent</Concurrency>
			<Scripts>
				<Script>
					//forced
					
					var l_tabManager = me.s('tabManager');
					
					l_tabManager.fa('Update Current Explorer Tab');
				</Script>
			</Scripts>
		</Action>
	</_Actions>
</Entity>