<?xml version="1.0" encoding="utf-8"?>
<Entity extends="std.display.Div">
	<_States>
		<_State id="width"><Value>100%</Value></_State>
		<_State id="height"><Value>100</Value></_State>
		<_State id="layout"><Value>Horizontal</Value></_State>
		<_State id="gap"><Value>0</Value></_State>
		<State><Id>headerTheme</Id><Type>Text</Type><Value>Undefined</Value></State>
		<State><Id>headers</Id><Type>Dynamic</Type><Value>null</Value></State>
		<State><Id>TabManager</Id><Type>Dynamic</Type><Value>null</Value></State>
	</_States>
	
	<_Actions>
		<Action>
			<Id>Initialize</Id>
			<Concurrency>Persistent</Concurrency>
			<Scripts>
				<Script>
					//forced
					
					me.set('headers', new StringMap()); //So the cache thing is preventing us from doing this directly in the states, for objects instantiated more than 2 times
				</Script>
			</Scripts>
		</Action>
	
		<Action>
			<Id>Add Header</Id>
			<Concurrency>Persistent</Concurrency>
			<Scripts>
				<Script>
					//forced
					
					//Create the Tab Header
					var l_header = Logic.create('SparkEditor.levels.projectEditor.components.tabManager.header.themes.'+me.s('headerTheme')+'.Header');
					l_header.setState('headerName',it.s('name'));
					l_header.setState('headerTitle',it.s('title'));
					l_header.setState('headerType',it.s('type'));
					l_header.setState('TabManager',me.s('TabManager'));
					me.addChild(l_header);
					
					//Add to collection
					me.s('headers').set(it.s('name'),l_header);
				</Script>
			</Scripts>
			<States>
				<State><Id>name</Id><Type>Text</Type><Value>Undefined</Value></State>
				<State><Id>title</Id><Type>Text</Type><Value>Undefined</Value></State>
				<State><Id>type</Id><Type>Text</Type><Value>Undefined</Value></State>
			</States>
		</Action>
	
		<Action>
			<!-- Removes, and preferrably destroys header, forever and ever.. will not use it anymore -->
			<Id>Remove Header</Id>
			<Concurrency>Persistent</Concurrency>
			<Scripts>
				<Script>
					//forced
					
					Display.de("Removing header: " + it.s('name'));
					
					//Get Header
					var l_header = me.s('headers').get(it.s('name'));
					
					//Physically remove it
					me.removeChild(l_header);
					
					//Destroy it?
					//..
					
					//Remove it from the collection
					me.s('headers').remove(it.s('name'));
				</Script>
			</Scripts>
			<States>
				<State><Id>name</Id><Type>Text</Type><Value>Undefined</Value></State>
			</States>
		</Action>
	
		<Action>
			<Id>Show Header</Id>
			<Concurrency>Persistent</Concurrency>
			<Scripts>
				<Script>
					//forced
					
					Display.de("Showing header: " + it.s('name'));
					
					//Get Header
					var l_header = me.s('headers').get(it.s('name'));
					
					//Show Me
					l_header.fa('Show Me');
				</Script>
			</Scripts>
			<States>
				<State><Id>name</Id><Type>Text</Type><Value>Undefined</Value></State>
			</States>
		</Action>
	
		<Action>
			<Id>Hide Header</Id>
			<Concurrency>Persistent</Concurrency>
			<Scripts>
				<Script>
					//forced
					
					Display.de("Hiding header: " + it.s('name'));
					
					//Get Header
					var l_header = me.s('headers').get(it.s('name'));
					
					//Hide Me
					l_header.fa('Hide Me');
				</Script>
			</Scripts>
			<States>
				<State><Id>name</Id><Type>Text</Type><Value>Undefined</Value></State>
			</States>
		</Action>
	</_Actions>
</Entity>