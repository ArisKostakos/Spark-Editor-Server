<Entity extends="std.primitives.2d.Spriter">


	<Extends>
		<Entity extends="lib.behaviors.2d.Sprite"/>
		<Entity extends="lib.behaviors.2d.Physics">
			<_States>
				<_State id="physicsEntity">
					<Value><![CDATA[false]]></Value>
				</_State>
			</_States>
		</Entity>
	</Extends>
	<_States>
		<_State id="name">
			<Value><![CDATA[Untitled Object]]></Value>
		</_State>
		<_State id="2DMeshSpriterForm">
			<Value><![CDATA[data:halloween_game.spider.spider]]></Value>
		</_State>
		<_State id="Atlas Folder">
			<Value><![CDATA[image:halloween_game.spider]]></Value>
		</_State>
		<_State id="Animation" live="true">
			<Value><![CDATA[Idle]]></Value>
		</_State>
		<_State id="Animation Speed" live="true">
			<Value><![CDATA[1]]></Value>
		</_State>
	</_States>
		
	<_Actions>
		<_Action id="Constructor">
			<_Scripts>
				<Script>
					me.sa('WaitFor',{delay:Logic.random(3,5),cbEntity:me,cbAction:"Blink"});
				</Script>
			</_Scripts>
		</_Action>
			
		<Action>
			<Id>Blink</Id>
			<Concurrency>Persistent</Concurrency>
			<Scripts>
				<Script>
					me.set('Animation', 'Blink');
					me.sa('WaitFor',{delay:1,cbEntity:me,cbAction:"Normal"});
				</Script>
			</Scripts>
		</Action>
				
		<Action>
			<Id>Normal</Id>
			<Concurrency>Persistent</Concurrency>
			<Scripts>
				<Script>
					me.set('Animation', 'Idle');
					me.sa('WaitFor',{delay:Logic.random(3,5),cbEntity:me,cbAction:"Blink"});
				</Script>
			</Scripts>
		</Action>
			
		<Action>
			<Id>WaitFor</Id>
			<Concurrency>Transient</Concurrency>
			<Scripts>
				<Script><![CDATA[
				    it.addToState('delayCurrent',Logic.getDt());
				    
				    if (it.getState('delayCurrent')>it.getState('delay'))
				    {
					    it.stop();
					    
					    //Callback (Action finished)
						it.setState('delayCurrent',0);
						it.s('cbEntity').fa(it.s('cbAction'));
					}
				]]></Script>
			</Scripts>
			<States>
				<State><Id>delayCurrent</Id><Type>Decimal</Type><Value>0</Value></State>
				<State><Id>delay</Id><Type>Decimal</Type><Value>0</Value></State>
				<State><Id>cbEntity</Id><Type>Dynamic</Type><Value>null</Value></State>
				<State><Id>cbAction</Id><Type>Text</Type><Value>Undefined</Value></State>
			</States>
		</Action>
	</_Actions>
</Entity>