<?xml version="1.0" encoding="utf-8"?>
<Entity extends="std.display.Div">
	<_States>
		<_State id="name"><Value>Spark Editor:Signup Panel</Value></_State>
		<_State id="layout"><Value>Vertical</Value></_State>
		<_State id="horizontalAlign"><Value>center</Value></_State>
		<_State id="verticalAlign"><Value>top</Value></_State>
		<_State id="width"><Value>512</Value></_State>
		<_State id="height"><Value>550</Value></_State>
		<_State id="gap"><Value>3</Value></_State>
		<_State id="display"><Value>none</Value></_State>
		<_State id="horizontalCenter"><Value>0</Value></_State>
		<_State id="verticalCenter"><Value>0</Value></_State>
		<_State id="paddingLeft"><Value>42</Value></_State>
		<_State id="paddingRight"><Value>38</Value></_State>
		<_State id="paddingTop"><Value>52</Value></_State>
		<_State id="paddingBottom"><Value>49</Value></_State>
		<_State id="backgroundColor"><Value>#21303D</Value></_State>
		<_State id="borderRadius"><Value>12px</Value></_State>
		<_State id="boxShadow"><Value>5px 5px 10px rgba(0, 0, 0, 0.3)</Value></_State>
		
		<State><Id>nameInput</Id><Type>Dynamic</Type><Value>null</Value></State>
		<State><Id>emailInput</Id><Type>Dynamic</Type><Value>null</Value></State>
		<State><Id>alphaInput</Id><Type>Dynamic</Type><Value>null</Value></State>
		<State><Id>userInput</Id><Type>Dynamic</Type><Value>null</Value></State>
		<State><Id>passInput</Id><Type>Dynamic</Type><Value>null</Value></State>
		<State><Id>vpassInput</Id><Type>Dynamic</Type><Value>null</Value></State>
		<State><Id>outputText</Id><Type>Dynamic</Type><Value>null</Value></State>
	</_States>
	
	<Form>
		<Space>
			<Entities>
				<!-- Full Name -->
				<Entity extends="std.display.HGroup"><_States>
					<_State id="width"><Value>100%</Value></_State>
					<_State id="gap"><Value>3</Value></_State></_States><Form><Space><Entities>
						<Entity extends="std.display.Div"><_States>
							<_State id="width"><Value>49</Value></_State>
							<_State id="height"><Value>49</Value></_State>
							<_State id="backgroundColor"><Value>rgb(231, 47, 87)</Value></_State></_States>
						<Form><Space><Entities><Entity extends="std.display.Image"><_States>
								<_State id="width"><Value>25</Value></_State>
								<_State id="height"><Value>25</Value></_State>
								<_State id="horizontalCenter"><Value>0</Value></_State>
								<_State id="verticalCenter"><Value>0</Value></_State>
								<_State id="src"><Value>nameIcon</Value></_State>
						</_States></Entity></Entities></Space></Form></Entity>
				
						<Entity extends="std.display.Input"><_States>
							<_State id="name"><Value>Name Input</Value></_State>
							<_State id="width"><Value>100%</Value></_State>
							<_State id="height"><Value>47</Value></_State>
							<_State id="backgroundColor"><Value>rgb(61, 77, 95)</Value></_State>
							<_State id="border"><Value>0px</Value></_State>
							<_State id="placeholder"><Value>Full Name</Value></_State>
							<_State id="fontSize"><Value>23px</Value></_State>
							<_State id="fontColor"><Value>white</Value></_State>
							<_State id="textIndent"><Value>12px</Value></_State>
						</_States></Entity>
				</Entities></Space></Form></Entity>
				
				<!-- E-mail -->
				<Entity extends="std.display.HGroup"><_States>
					<_State id="width"><Value>100%</Value></_State>
					<_State id="gap"><Value>3</Value></_State></_States><Form><Space><Entities>
						<Entity extends="std.display.Div"><_States>
							<_State id="width"><Value>49</Value></_State>
							<_State id="height"><Value>49</Value></_State>
							<_State id="backgroundColor"><Value>rgb(231, 47, 87)</Value></_State></_States>
						<Form><Space><Entities><Entity extends="std.display.Image"><_States>
								<_State id="name"><Value>EmailImage</Value></_State>
								<_State id="width"><Value>25</Value></_State>
								<_State id="height"><Value>17</Value></_State>
								<_State id="horizontalCenter"><Value>0</Value></_State>
								<_State id="verticalCenter"><Value>0</Value></_State>
								<_State id="src"><Value>emailIcon</Value></_State>
						</_States></Entity></Entities></Space></Form></Entity>
						
						<Entity extends="std.display.Input"><_States>
							<_State id="name"><Value>Email Input</Value></_State>
							<_State id="width"><Value>100%</Value></_State>
							<_State id="height"><Value>47</Value></_State>
							<_State id="backgroundColor"><Value>rgb(61, 77, 95)</Value></_State>
							<_State id="border"><Value>0px</Value></_State>
							<_State id="placeholder"><Value>E-mail</Value></_State>
							<_State id="fontSize"><Value>23px</Value></_State>
							<_State id="fontColor"><Value>white</Value></_State>
							<_State id="textIndent"><Value>12px</Value></_State>
						</_States></Entity>
				</Entities></Space></Form></Entity>
				
				<!-- Alpha Key -->
				<Entity extends="std.display.HGroup"><_States>
					<_State id="width"><Value>100%</Value></_State>
					<_State id="gap"><Value>3</Value></_State></_States><Form><Space><Entities>
						<Entity extends="std.display.Div"><_States>
							<_State id="width"><Value>49</Value></_State>
							<_State id="height"><Value>49</Value></_State>
							<_State id="backgroundColor"><Value>rgb(231, 47, 87)</Value></_State></_States>
						<Form><Space><Entities><Entity extends="std.display.Image"><_States>
								<_State id="width"><Value>13</Value></_State>
								<_State id="height"><Value>29</Value></_State>
								<_State id="horizontalCenter"><Value>0</Value></_State>
								<_State id="verticalCenter"><Value>0</Value></_State>
								<_State id="src"><Value>alphakeyIcon</Value></_State>
						</_States></Entity></Entities></Space></Form></Entity>
						
						<Entity extends="std.display.Input"><_States>
							<_State id="name"><Value>AlphaKey Input</Value></_State>
							<_State id="width"><Value>100%</Value></_State>
							<_State id="height"><Value>47</Value></_State>
							<_State id="backgroundColor"><Value>rgb(61, 77, 95)</Value></_State>
							<_State id="border"><Value>0px</Value></_State>
							<_State id="placeholder"><Value>Alpha Key</Value></_State>
							<_State id="fontSize"><Value>23px</Value></_State>
							<_State id="fontColor"><Value>white</Value></_State>
							<_State id="textIndent"><Value>12px</Value></_State>
						</_States></Entity>
				</Entities></Space></Form></Entity>
				
				<!-- UserName -->
				<Entity extends="std.display.HGroup"><_States>
					<_State id="width"><Value>100%</Value></_State>
					<_State id="gap"><Value>3</Value></_State></_States><Form><Space><Entities>
						<Entity extends="std.display.Div"><_States>
							<_State id="width"><Value>49</Value></_State>
							<_State id="height"><Value>49</Value></_State>
							<_State id="backgroundColor"><Value>rgb(231, 47, 87)</Value></_State></_States>
						<Form><Space><Entities><Entity extends="std.display.Image"><_States>
								<_State id="width"><Value>24</Value></_State>
								<_State id="height"><Value>26</Value></_State>
								<_State id="horizontalCenter"><Value>0</Value></_State>
								<_State id="verticalCenter"><Value>0</Value></_State>
								<_State id="src"><Value>userIcon</Value></_State>
						</_States></Entity></Entities></Space></Form></Entity>
						
						<Entity extends="std.display.Input"><_States>
							<_State id="name"><Value>User Input</Value></_State>
							<_State id="width"><Value>100%</Value></_State>
							<_State id="height"><Value>47</Value></_State>
							<_State id="backgroundColor"><Value>rgb(61, 77, 95)</Value></_State>
							<_State id="border"><Value>0px</Value></_State>
							<_State id="placeholder"><Value>User Name</Value></_State>
							<_State id="fontSize"><Value>23px</Value></_State>
							<_State id="fontColor"><Value>white</Value></_State>
							<_State id="textIndent"><Value>12px</Value></_State>
						</_States></Entity>
				</Entities></Space></Form></Entity>
				
				<!-- Password -->
				<Entity extends="std.display.HGroup"><_States>
					<_State id="width"><Value>100%</Value></_State>
					<_State id="gap"><Value>3</Value></_State></_States><Form><Space><Entities>
						<Entity extends="std.display.Div"><_States>
							<_State id="width"><Value>49</Value></_State>
							<_State id="height"><Value>49</Value></_State>
							<_State id="backgroundColor"><Value>rgb(231, 47, 87)</Value></_State></_States>
						<Form><Space><Entities><Entity extends="std.display.Image"><_States>
								<_State id="width"><Value>17</Value></_State>
								<_State id="height"><Value>23</Value></_State>
								<_State id="horizontalCenter"><Value>0</Value></_State>
								<_State id="verticalCenter"><Value>0</Value></_State>
								<_State id="src"><Value>passwordIcon</Value></_State>
						</_States></Entity></Entities></Space></Form></Entity>
						
						<Entity extends="std.display.Input"><_States>
							<_State id="name"><Value>Password Input</Value></_State>
							<_State id="width"><Value>100%</Value></_State>
							<_State id="height"><Value>47</Value></_State>
							<_State id="backgroundColor"><Value>rgb(61, 77, 95)</Value></_State>
							<_State id="border"><Value>0px</Value></_State>
							<_State id="placeholder"><Value>Password</Value></_State>
							<_State id="type"><Value>password</Value></_State>
							<_State id="fontSize"><Value>23px</Value></_State>
							<_State id="fontColor"><Value>white</Value></_State>
							<_State id="textIndent"><Value>12px</Value></_State>
						</_States></Entity>
				</Entities></Space></Form></Entity>
				
				<!-- VerifyPassword -->
				<Entity extends="std.display.HGroup"><_States>
					<_State id="width"><Value>100%</Value></_State>
					<_State id="gap"><Value>3</Value></_State></_States><Form><Space><Entities>
						<Entity extends="std.display.Div"><_States>
							<_State id="width"><Value>49</Value></_State>
							<_State id="height"><Value>49</Value></_State>
							<_State id="backgroundColor"><Value>rgb(231, 47, 87)</Value></_State></_States>
						<Form><Space><Entities><Entity extends="std.display.Image"><_States>
								<_State id="width"><Value>17</Value></_State>
								<_State id="height"><Value>23</Value></_State>
								<_State id="horizontalCenter"><Value>0</Value></_State>
								<_State id="verticalCenter"><Value>0</Value></_State>
								<_State id="src"><Value>verifypassIcon</Value></_State>
						</_States></Entity></Entities></Space></Form></Entity>
						
						<Entity extends="std.display.Input"><_States>
							<_State id="name"><Value>VerifyPass Input</Value></_State>
							<_State id="width"><Value>100%</Value></_State>
							<_State id="height"><Value>47</Value></_State>
							<_State id="backgroundColor"><Value>rgb(61, 77, 95)</Value></_State>
							<_State id="border"><Value>0px</Value></_State>
							<_State id="placeholder"><Value>Verify Password</Value></_State>
							<_State id="type"><Value>password</Value></_State>
							<_State id="fontSize"><Value>23px</Value></_State>
							<_State id="fontColor"><Value>white</Value></_State>
							<_State id="textIndent"><Value>12px</Value></_State>
						</_States></Entity>
				</Entities></Space></Form></Entity>
				
				<!-- Spacer -->
				<Entity extends="std.display.Group"><_States><_State id="height"><Value>20</Value></_State></_States></Entity>
				
				<!-- Signup Button -->
				<Entity extends="std.display.Button"><_States>
					<_State id="width"><Value>100%</Value></_State>
					<_State id="height"><Value>49</Value></_State>
					<_State id="backgroundColor"><Value>rgb(231, 47, 87)</Value></_State>
					<_State id="border"><Value>0px</Value></_State>
					<_State id="textAlign"><Value>center</Value></_State>
					<_State id="textVerticalAlign"><Value>middle</Value></_State>
					<_State id="text"><Value>Sign up</Value></_State>
					<_State id="fontSize"><Value>30px</Value></_State>
					<_State id="fontColor"><Value>white</Value></_State>
				</_States>
				<_Triggers><Trigger><Event>MouseLeftClick</Event><Scripts>
				<Script>
				var projectEntity = e('Spark Editor');
				if (projectEntity.s('Connected')==true)
				{
					var strAlpha = parent.getState('alphaInput').getState('text');
					var strName = parent.getState('nameInput').getState('text');
					var strEmail = parent.getState('emailInput').getState('text');
					var strUser =parent.getState('userInput').getState('text');
					var strPass =parent.getState('passInput').getState('text');
					var strVpass =parent.getState('vpassInput').getState('text');
					
					if (strAlpha.length>0 && strAlpha!='Undefined' &&
						strName.length>0 && strName!='Undefined' &&
						strEmail.length>0 && strEmail!='Undefined' &&
						strUser.length>0 && strUser!='Undefined' &&
						strPass.length>0 && strPass!='Undefined' &&
						strVpass.length>0 && strVpass!='Undefined')
					{
						if (strPass==strVpass)
						{
							parent.getState('outputText').setState('text', 'Please wait...');
							
							Comms.request("registration.signupHandler.signup", { 	uid: projectEntity.getState('UniqueId'), 
																					key: strAlpha, 
																					fullname: strName, 
																					email: strEmail, 
																					username: strUser, 
																					password: strPass}, "Sign Up Request", e('Spark Editor:Signup Panel'));
						}
						else
						{
							parent.getState('outputText').setState('text', 'Password/Verify Password do not match.');
						}
					}
					else
					{
						parent.getState('outputText').setState('text', 'Please fill in every field.');
					}
						
				}
				else
				{
					parent.getState('outputText').setState('text', 'Client has not connected yet! Be patient...');
				}
				</Script>
				</Scripts></Trigger></_Triggers></Entity>
				
				<!-- Signup Button Back -->
				<Entity extends="std.display.Button"><_States>
					<_State id="width"><Value>100%</Value></_State>
					<_State id="height"><Value>49</Value></_State>
					<_State id="backgroundColor"><Value>rgb(59, 185, 176)</Value></_State>
					<_State id="border"><Value>0px</Value></_State>
					<_State id="textAlign"><Value>center</Value></_State>
					<_State id="textVerticalAlign"><Value>middle</Value></_State>
					<_State id="text"><Value>Back</Value></_State>
					<_State id="fontSize"><Value>30px</Value></_State>
					<_State id="fontColor"><Value>white</Value></_State>
				</_States>
				<_Triggers><Trigger><Event>MouseLeftClick</Event><Scripts>
				<Script>
					var loginPanel = e('Spark Editor:Login Panel');
					var signupPanel = e('Spark Editor:Signup Panel');
					
					loginPanel.setState('display','inline');
					parent.setState('display','none');
				</Script>
				</Scripts></Trigger></_Triggers></Entity>
				
				<!-- Spacer -->
				<Entity extends="std.display.Group"><_States><_State id="height"><Value>12</Value></_State></_States></Entity>
				
				<!-- Output Text -->
				<Entity extends="std.display.Text"><_States>
					<_State id="name"><Value>Output Text</Value></_State>
					<_State id="width"><Value>100%</Value></_State>
					<_State id="height"><Value>49</Value></_State>
					<_State id="fontSize"><Value>22px</Value></_State>
					<_State id="fontColor"><Value>white</Value></_State>
					<_State id="textAlign"><Value>center</Value></_State>
				</_States></Entity>
			</Entities>
		</Space>
	</Form>
	
	<_Actions>
		<_Action id="Constructor">
			<_Scripts>
				<Script>
					for (child of me.getChildren())
					{
						if (child.getState('name')=='Output Text')
							me.setState('outputText',child);
								
						for (grandchild of child.getChildren())
							if (grandchild.getState('name')=='Name Input')
								me.setState('nameInput',grandchild);
							else if (grandchild.getState('name')=='Email Input')
								me.setState('emailInput',grandchild);
							else if (grandchild.getState('name')=='AlphaKey Input')
								me.setState('alphaInput',grandchild);
							else if (grandchild.getState('name')=='User Input')
								me.setState('userInput',grandchild);
							else if (grandchild.getState('name')=='Password Input')
								me.setState('passInput',grandchild);
							else if (grandchild.getState('name')=='VerifyPass Input')
								me.setState('vpassInput',grandchild);
					}
				</Script>
			</_Scripts>
		</_Action>
			
		<Action>
			<Id>show</Id>
			<Concurrency>Persistent</Concurrency>
			<Scripts>
				<Script>
					me.stopAction('show');
					
					me.s('nameInput').setState('text','');
					me.s('emailInput').setState('text','');
					me.s('alphaInput').setState('text','');
					me.s('userInput').setState('text','');
					me.s('passInput').setState('text','');
					me.s('vpassInput').setState('text','');
					me.s('outputText').setState('text','');
					me.setState('display','inline');
				</Script>
			</Scripts>
		</Action>
	</_Actions>
	
	<_Triggers>
		<Trigger>
			<Event>NetworkRequest</Event>
			<Parameter>Sign Up Request</Parameter>
			<Scripts>
				<Script>
					var data = Comms.getRequestData("Sign Up Request");
					
					if (data.code=="success")
					{
						//Get Login Panel
						var loginPanel = Logic.getEntityByName('Spark Editor:Login Panel');
						
						//Report to Google Analytics
						e('Spark Editor').getAction('GoogleAnalytics').setState('category','Project');
						e('Spark Editor').getAction('GoogleAnalytics').setState('action','Signup');
						e('Spark Editor').getAction('GoogleAnalytics').setState('label',me.s('userInput').s('text'));
						e('Spark Editor').forceAction('GoogleAnalytics');
						
						me.setState('display','none');
						loginPanel.s('userInput').setState('text',me.s('userInput').s('text'));
						loginPanel.s('passwordInput').setState('text','');
						loginPanel.s('outputText').setState('text','Registration successful.');
						loginPanel.setState('display','inline');
					}
					else if (data.code=="email")
					{
						me.s('outputText').setState('text', 'This E-mail is already being used.');
					}
					else if (data.code=="username")
					{
						me.s('outputText').setState('text', 'This Username is taken.');
					}
					else if (data.code=="key")
					{
						me.s('outputText').setState('text', 'This Alpha Key has already been used.');
					}
					else if (data.code=="keyinvalid")
					{
						me.s('outputText').setState('text', 'The Alpha Key entered is invalid.');
					}
					else if (data.code=="usernameinvalid")
					{
						me.s('outputText').setState('text', 'The Username has invalid characters.');
					}
					else if (data.code=="error")
					{
						me.s('outputText').setState('text', 'An unknown error occured.');
					}
				</Script>
			</Scripts>
		</Trigger>
	</_Triggers>
</Entity>