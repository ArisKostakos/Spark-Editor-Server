<?xml version="1.0" encoding="utf-8"?>
<Entity>
	<_Actions>
		<_Action id="Constructor">
			<_Scripts>
				<Script>
					Display.error("Start Connecting to stuff...");
					me.setState('UniqueId', "Connection" + Std.random(999999));
					
					//old: 104.154.55.28
					//new: 130.211.172.86
					Comms.connectTo("130.211.172.86","3014", "gateServer");
					Comms.file_connectTo("130.211.172.86", "3001", "fileServer");
				</Script>
			</_Scripts>
		</_Action>
	</_Actions>
	
	<_Triggers>
		<!-- Networking -->
		<Trigger>
			<Event>NetworkConnected</Event>
			<Scripts>
				<Script>
					Display.error("CONNECTED TO: " + Comms.connectedServerName);
					
					if (Comms.connectedServerName=="gateServer")
					{
						Comms.request('gate.gateHandler.queryEntry', { uid: me.getState('UniqueId') }, "getConnectorAddress");
					}
					else if (Comms.connectedServerName=="connectorServer")
					{
						Comms.request('connector.entryHandler.enter', { uid: me.getState('UniqueId') }, "greetConnector");
					}
				</Script>
			</Scripts>
		</Trigger>
		<Trigger>
			<Event>NetworkRequest</Event>
			<Scripts>
				<Script>
					Display.error("Received Request...");
					//var dfdf = ;
					/*This is terrible.. if two request events are raised simutaneously, this will collapse
					if i do if else, then the first one will be triggered twice
					if i do if, if, if then all of them will be executed twice
					i can't remove the request from the Comms array either, cause more than one entities might be connected to the
					same request and need it...*/
					
					//Implementation below now assumes two request events will never be raised simutaneously (which is very wrong..)
					if (Comms.getRequestData("getConnectorAddress")!=null)
					{
						Display.error("Request Received Identified: getConnectorAddress");
						var data = Comms.getRequestData("getConnectorAddress");
						
						Comms.disconnect();
						
						if (data.code == 2001) 
						{
							Display.error("Pomelo: Received error code 2001! Aborting connection.");
							return;
						}
						
						if (data.host == '127.0.0.1') 
							data.host = "130.211.172.86";

						Comms.connectTo(data.host, data.port, "connectorServer");
					}
					else if (Comms.getRequestData("greetConnector")!=null)
					{
						Display.error("Request Received Identified: greetConnector");
						var data = Comms.getRequestData("greetConnector");
						Display.error("Data received: " + data.code);
						
						
						me.setState('Connected',true);
						Logic.getEntityByName('Login Connected Light').setState('backgroundColor','green');
						
						//Comms.request('lobby.projectHandler.createIncludeQuery', { includeTags: ['test'], includeQuery: {type: "script"} }, "CreateIncludeQuery");
					}
					else if (Comms.getRequestData("Sign Up Request")!=null)
					{
						Display.error("Request Received Identified: Sign Up Request");
						var data = Comms.getRequestData("Sign Up Request");
						Display.error("Data received: " + data.code);
					}
					else if (Comms.getRequestData("Log In Request")!=null)
					{
						Display.error("Request Received Identified: Log In Request");
						var data = Comms.getRequestData("Log In Request");
						Display.error("Data received: " + data.code);
					}
					else if (Comms.getRequestData("Create Project Request")!=null)
					{
						Display.error("Request Received Identified: Create Project Request");
						var data = Comms.getRequestData("Create Project Request");
						Display.error("Data received: " + data.code);
					}
					else if (Comms.getRequestData("File Send Request")!=null)
					{
						Display.error("Request Received Identified: File Send Request");
						var data = Comms.getRequestData("File Send Request");
						Display.error("Data received: " + data.code);
					}
					else
					{
						//Display.error("Request Could NOT be identified:-(");
					}
					
				</Script>
			</Scripts>
		</Trigger>
		
		<Trigger>
			<Event>NetworkServerEvent</Event>
			<Scripts>
				<Script>
					Display.error("Received Server Event...");
					
				</Script>
			</Scripts>
		</Trigger>
		
		
		<!-- File Transfer -->
		<Trigger>
			<Event>FileTransferConnected</Event>
			<Scripts>
				<Script>
					Display.error("FILE SERVER CONNECTED TO: " + Comms.file_connectedServerName);
					
					if (Comms.file_connectedServerName=="fileServer")
					{
						Display.error("Received File Server CONNECTED Event...");
					}
				</Script>
			</Scripts>
		</Trigger>
		
		<Trigger>
			<Event>FileTransferRequest</Event>
			<Scripts>
				<Script>
					//Display.error("Received File Transfer Request...");
					
					/*This is terrible.. if two request events are raised simutaneously, this will collapse
					if i do if else, then the first one will be triggered twice
					if i do if, if, if then all of them will be executed twice
					i can't remove the request from the Comms array either, cause more than one entities might be connected to the
					same request and need it...*/
					
					//Implementation below now assumes two request events will never be raised simutaneously (which is very wrong..)
					if (Comms.file_getSendFileRequestData("sendTestFile")!=null)
					{
						//Display.error("File Request Received Identified: sendTestFile");
						var data = Comms.file_getSendFileRequestData("sendTestFile");
						
						//Display.error("File Transfer Progress: " + data.progress + "%");
						Display.error("File Transfer Progress: " + data.progress + ", percent: " + data.progressPercent);
					}
					else
					{
						//Display.error("File Transfer Request Could NOT be identified:-(");
					}
				</Script>
			</Scripts>
		</Trigger>
		
	</_Triggers>
	
	<_States>
		<State>
			<Id>UniqueId</Id>
			<Type>Text</Type>
			<Value>Undefined</Value>
		</State>
		
		<State>
			<Id>username</Id>
			<Type>Text</Type>
			<Value>Undefined</Value>
		</State>
		
		<State>
			<Id>projectname</Id>
			<Type>Text</Type>
			<Value>Undefined</Value>
		</State>
		
		<State>
			<Id>Connected</Id>
			<Type>Boolean</Type>
			<Value>false</Value>
		</State>
				
		<State>
			<Id>adminMode</Id>
			<Type>Boolean</Type>
			<Value>false</Value>
		</State>
	</_States>
</Entity>