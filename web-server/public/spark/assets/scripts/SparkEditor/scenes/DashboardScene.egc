<?xml version="1.0" encoding="utf-8"?>
<Entity extends="std.display.Scene2D">

	<_States>
		<_State id="name">
			<Value>Dashboard Scene</Value>
		</_State>
	</_States>
	
	<Form>
		<Space>
			<Entities>
				<!-- Background -->
				<Entity extends="std.display.Div">
					<_States>
						<_State id="width"><Value>100%</Value></_State>
						<_State id="height"><Value>100%</Value></_State>
						<_State id="backgroundColor"><Value>rgb(66,84,102)</Value></_State>
					</_States>
				</Entity>
				
				<!-- My Projects -->
				<Entity extends="std.display.Group">
					<_States>
						<_State id="name"><Value>Lobby Projects Container</Value></_State>
						<_State id="layout"><Value>Tile</Value></_State>
						<_State id="width"><Value>100%</Value></_State>
						<_State id="height"><Value>100%</Value></_State>
						<_State id="horizontalAlign"><Value>justify</Value></_State>
						<_State id="verticalAlign"><Value>justify</Value></_State>
						<_State id="paddingLeft"><Value>30</Value></_State>
						<_State id="paddingRight"><Value>10</Value></_State>
						<_State id="paddingTop"><Value>30</Value></_State>
						<_State id="paddingBottom"><Value>10</Value></_State>
						<_State id="horizontalGap"><Value>12</Value></_State>
						<_State id="verticalGap"><Value>12</Value></_State>
					</_States>
					<Form><Space><Entities>
						<!-- Create New -->
						<Entity extends="SparkEditor.entities.lobby.projects.ProjectTile"><_States>
							<_State id="projectName"><Value>Create New</Value></_State>
							<_State id="imageName"><Value>lobbyProject_NewProject</Value></_State>
						</_States>
						<_Actions>
							<_Action id="ButtonClicked">
								<_Scripts>
									<Script>
										Display.error("ok this works fine..");
										Logic.getEntityByName('Pop Up Area').setState('display','inline');
									</Script>
								</_Scripts>
							</_Action>
						</_Actions>
						</Entity>
					</Entities></Space></Form>
				</Entity>
			
			
				<!-- Pop Up Area -->
				<Entity extends="std.display.Div">
					<_States>
						<_State id="name"><Value>Pop Up Area</Value></_State>
						<_State id="width"><Value>100%</Value></_State>
						<_State id="height"><Value>100%</Value></_State>
						<_State id="display"><Value>none</Value></_State>
					</_States>
					<!--children-->
					<Form><Space><Entities>
						<!-- Background Area -->
						<Entity extends="std.display.Div">
							<_States>
								<_State id="width"><Value>100%</Value></_State>
								<_State id="height"><Value>100%</Value></_State>
								<_State id="backgroundColor"><Value>white</Value></_State>
								<_State id="opacity"><Value>0.07</Value></_State>
							</_States>
						</Entity>
						
						<!-- New Project Pop Up -->
						<Entity extends="SparkEditor.entities.lobby.projects.NewProjectPopUp">
							<_States>
								<_State id="horizontalCenter"><Value>0</Value></_State>
								<_State id="verticalCenter"><Value>0</Value></_State>
							</_States>
						</Entity>
					</Entities></Space></Form>
				</Entity>
			</Entities>
		</Space>
	</Form>
	
	<_Triggers>
		<Trigger>
			<Event>NetworkRequest</Event>
			<Scripts>
				<Script>
					if (Comms.getRequestData("Create Project Request")!=null)
					{
						var data = Comms.getRequestData("Create Project Request");
						
						if (data.code=="success")
						{
							//Logic.getEntityByName('Spark Editor').setState('projectname',data.project.projectname);

							//Logic.getEntityByName('Top Bar Username Text').setState('text','Username: ' + Logic.getEntityByName('Spark Editor').getState('username'));
							//Logic.getEntityByName('Top Bar Project Text').setState('text','Project: ' + Logic.getEntityByName('Spark Editor').getState('projectname'));

						
							//query library components
							//Comms.request("editor.componentHandler.get", {queryArray: data.project.library}, "Get Components");
							
							return;
							
							Logic.getEntityByName('Dashboard Output Text').setState('text', 'Project created!');
							
							//Add new project
							me.getAction('AddProjects').setState('items', [data.project]);
							me.startAction('AddProjects');
						}
						else if (data.code=="exists")
						{
							Logic.getEntityByName('Dashboard Output Text').setState('text', 'Project name already exists.');
						}
						else
						{
							Logic.getEntityByName('Dashboard Output Text').setState('text', 'Error creating project.');
						}
					}
				</Script>
			</Scripts>
		</Trigger>
	</_Triggers>
	
	<_Actions>
		<Action>
			<Id>AddProjects</Id>
			<Concurrency>Persistent</Concurrency>
			<Scripts>
				<Script>
					return;
					
					
					var projectsContainer = Logic.getEntityByName('Lobby Projects Container');
					var projects = me.getAction('AddProjects').getState('items');
					
					var i = 0;
					while (projects.length>i)
					{
						var myNewItem = Logic.gameFactory.createGameEntity('SparkEditor.entities.LobbyProjectEntryPanel');
						var templateSuffix='';
						
						if (projects[i].tags.length!=0)
							if (projects[i].tags[0]=='template')
								templateSuffix='Template: ';
								
						myNewItem.setState('projectName',templateSuffix+projects[i].name);
						myNewItem.setState('project',projects[i]);
						projectsContainer.addChild(myNewItem);
						//Display.error('component #' + i + ':');
						//Display.error(projects[i].assets);
						
						i+=1;
					}
					Display.projectActiveSpaceReference.activeStageReference.layoutManager.validated=false;
					me.stopAction("AddProjects");
				</Script>
			</Scripts>
			<States>
				<State><Id>items</Id><Type>Dynamic</Type><Value>null</Value></State>
			</States>
		</Action>
	</_Actions>
</Entity>