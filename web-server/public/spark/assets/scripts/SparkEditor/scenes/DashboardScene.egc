<?xml version="1.0" encoding="utf-8"?>
<Entity extends="std.display.Scene2D">

	<_States>
		<_State id="name">
			<Value>Dashboard Scene</Value>
		</_State>
	</_States>
	
	<Form>
		<Space>
			<Entities>
				<Entity extends="std.display.Div">
					<_States>
						<_State id="width"><Value>100%</Value></_State>
						<_State id="height"><Value>100%</Value></_State>
						<_State id="backgroundColor"><Value>rgb(21,31,40)</Value></_State>
					</_States>
				</Entity>
				
				<!-- My Projects -->
				<Entity extends="std.display.VGroup"><_States>
					<_State id="name"><Value>Lobby Projects Container</Value></_State>
					<_State id="width"><Value>100%</Value></_State>
					<_State id="gap"><Value>6</Value></_State></_States><Form><Space><Entities>
						<!-- Output Text -->
						<Entity extends="std.display.Text"><_States>
							<_State id="name"><Value>Dashboard Output Text</Value></_State>
							<_State id="width"><Value>100%</Value></_State>
							<_State id="height"><Value>22</Value></_State>
							<_State id="fontFamily"><Value>'Ubuntu', sans-serif</Value></_State>
							<_State id="fontSize"><Value>22px</Value></_State>
							<_State id="fontColor"><Value>red</Value></_State>
							<_State id="textAlign"><Value>center</Value></_State>
						</_States></Entity>
				
						<!-- Spacer -->
						<Entity extends="std.display.Group"><_States><_State id="height"><Value>2</Value></_State></_States></Entity>
						
						
						<!-- Create New Project -->
						<Entity extends="std.display.HGroup"><_States>
							<_State id="width"><Value>100%</Value></_State>
							<_State id="gap"><Value>3</Value></_State></_States><Form><Space><Entities>
								<!-- Input Box -->
								<Entity extends="std.display.Input"><_States>
									<_State id="name"><Value>Create New Project Input</Value></_State>
									<_State id="width"><Value>50%</Value></_State>
									<_State id="height"><Value>47</Value></_State>
									<_State id="backgroundColor"><Value>rgb(61, 77, 95)</Value></_State>
									<_State id="border"><Value>0px</Value></_State>
									<_State id="placeholder"><Value>New Project Name</Value></_State>
									<_State id="fontFamily"><Value>'Ubuntu', sans-serif</Value></_State>
									<_State id="fontSize"><Value>23px</Value></_State>
									<_State id="fontColor"><Value>white</Value></_State>
									<_State id="textIndent"><Value>12px</Value></_State>
								</_States></Entity>
								
								<!-- Create Project Button -->
								<Entity extends="std.display.Button"><_States>
									<_State id="width"><Value>25%</Value></_State>
									<_State id="height"><Value>49</Value></_State>
									<_State id="textAlign"><Value>center</Value></_State>
									<_State id="textVerticalAlign"><Value>middle</Value></_State>
									<_State id="backgroundColor"><Value>rgb(59, 185, 176)</Value></_State>
									<_State id="border"><Value>0px</Value></_State>
									<_State id="text"><Value>Create New Project</Value></_State>
									<_State id="fontFamily"><Value>'Ubuntu', sans-serif</Value></_State>
									<_State id="fontSize"><Value>30px</Value></_State>
									<_State id="fontColor"><Value>white</Value></_State>
								</_States>
								<_Triggers><Trigger><Event>MouseLeftClicked</Event><Scripts>
								<Script>
									var strProjectName = Logic.getEntityByName('Create New Project Input').getState('text');
								
									if (strProjectName.length>0 && strProjectName!='Undefined')
									{
										//Create New Project Code...
										Logic.getEntityByName('Dashboard Output Text').setState('text', 'Please wait...');
									
										Comms.request("lobby.projectHandler.create", {projectName: strProjectName, tags: []}, "Create Project Request");
									}
									else
									{
										Logic.getEntityByName('Dashboard Output Text').setState('text', 'Please fill in project Name field');
									}
								</Script>
								</Scripts></Trigger></_Triggers></Entity>
								
								<!-- Create Template Button -->
								<Entity extends="std.display.Button"><_States>
									<_State id="width"><Value>25%</Value></_State>
									<_State id="height"><Value>49</Value></_State>
									<_State id="textAlign"><Value>center</Value></_State>
									<_State id="textVerticalAlign"><Value>middle</Value></_State>
									<_State id="backgroundColor"><Value>rgb(159, 85, 176)</Value></_State>
									<_State id="border"><Value>0px</Value></_State>
									<_State id="text"><Value>Create New Template</Value></_State>
									<_State id="fontFamily"><Value>'Ubuntu', sans-serif</Value></_State>
									<_State id="fontSize"><Value>30px</Value></_State>
									<_State id="fontColor"><Value>white</Value></_State>
								</_States>
								<_Triggers><Trigger><Event>MouseLeftClicked</Event><Scripts>
								<Script>
									var strProjectName = Logic.getEntityByName('Create New Project Input').getState('text');
								
									if (strProjectName.length>0 && strProjectName!='Undefined')
									{
										//Create New Project Code...
										Logic.getEntityByName('Dashboard Output Text').setState('text', 'Please wait...');
									
										Comms.request("lobby.projectHandler.create", {projectName: strProjectName, tags: ['template']}, "Create Project Request");
									}
									else
									{
										Logic.getEntityByName('Dashboard Output Text').setState('text', 'Please fill in project Name field');
									}
								</Script>
								</Scripts></Trigger></_Triggers></Entity>
						</Entities></Space></Form></Entity>
						
						<!-- Label Text -->
						<Entity extends="std.display.Text"><_States>
							<_State id="width"><Value>100%</Value></_State>
							<_State id="height"><Value>22</Value></_State>
							<_State id="fontFamily"><Value>'Ubuntu', sans-serif</Value></_State>
							<_State id="fontSize"><Value>22px</Value></_State>
							<_State id="fontColor"><Value>white</Value></_State>
							<_State id="textAlign"><Value>left</Value></_State>
							<_State id="text"><Value>My Projects</Value></_State>
						</_States></Entity>
				</Entities></Space></Form></Entity>
			</Entities>
		</Space>
	</Form>
	
	<_Triggers>
		<Trigger>
			<Event>NetworkRequest</Event>
			<Scripts>
				<Script>
					if (Comms.getRequestData("Create Project Request")!=null)
					{
						var data = Comms.getRequestData("Create Project Request");
						
						if (data.code=="success")
						{
							//Logic.getEntityByName('Spark Editor').setState('projectname',data.project.projectname);

							//Logic.getEntityByName('Top Bar Username Text').setState('text','Username: ' + Logic.getEntityByName('Spark Editor').getState('username'));
							//Logic.getEntityByName('Top Bar Project Text').setState('text','Project: ' + Logic.getEntityByName('Spark Editor').getState('projectname'));

						
							//query library components
							//Comms.request("editor.componentHandler.get", {queryArray: data.project.library}, "Get Components");
							
							Logic.getEntityByName('Dashboard Output Text').setState('text', 'Project created!');
							
							//Add new project
							me.getAction('AddProjects').setState('items', [data.project]);
							me.startAction('AddProjects');
						}
						else if (data.code=="exists")
						{
							Logic.getEntityByName('Dashboard Output Text').setState('text', 'Project name already exists.');
						}
						else
						{
							Logic.getEntityByName('Dashboard Output Text').setState('text', 'Error creating project.');
						}
					}
				</Script>
			</Scripts>
		</Trigger>
	</_Triggers>
	
	<_Actions>
		<Action>
			<Id>AddProjects</Id>
			<Concurrency>Persistent</Concurrency>
			<Scripts>
				<Script>
					var projectsContainer = Logic.getEntityByName('Lobby Projects Container');
					var projects = me.getAction('AddProjects').getState('items');
					
					var i = 0;
					while (projects.length>i)
					{
						var myNewItem = Logic.gameFactory.createGameEntity('SparkEditor.entities.LobbyProjectEntryPanel');
						var templateSuffix='';
						
						if (projects[i].tags.length!=0)
							if (projects[i].tags[0]=='template')
								templateSuffix='Template: ';
								
						myNewItem.setState('projectName',templateSuffix+projects[i].name);
						myNewItem.setState('project',projects[i]);
						projectsContainer.addChild(myNewItem);
						//Display.error('component #' + i + ':');
						//Display.error(projects[i].assets);
						
						i+=1;
					}
					Display.projectActiveSpaceReference.activeStageReference.layoutManager.validated=false;
					me.stopAction("AddProjects");
				</Script>
			</Scripts>
			<States>
				<State><Id>items</Id><Type>Dynamic</Type><Value>null</Value></State>
			</States>
		</Action>
	</_Actions>
</Entity>