<?xml version="1.0" encoding="utf-8"?>
<Entity>
	<_States>
		<State>
			<Id>object_db</Id>
			<Type>Dynamic</Type>
			<Value>null</Value>
		</State>
		
		<!-- decide which of these we're gonna keep, and which we're gonna deprecate-->
		<!-- To get an asset, you need user+type+name -->
		<State>
			<Id>assetUserName</Id>
			<Type>Text</Type>
			<Value>Undefined</Value>
		</State>
		<State>
			<Id>assetType</Id>
			<Type>Text</Type>
			<Value>Undefined</Value>
		</State>
		<State>
			<Id>assetName</Id>
			<Type>Text</Type>
			<Value>Undefined</Value>
		</State>
		<State>
			<Id>fileId</Id>
			<Type>Text</Type>
			<Value>Undefined</Value>
		</State>
		<State>
			<Id>fileUrl</Id>
			<Type>Text</Type>
			<Value>Undefined</Value>
		</State>
		<State>
			<Id>target</Id>
			<Type>Dynamic</Type>
			<Value>null</Value>
		</State>
		<State>
			<Id>xmlExport</Id>
			<Type>Dynamic</Type>
			<Value>null</Value>
		</State>
	</_States>
		
	<_Actions>
		<_Action id="Constructor">
			<_Scripts>
				<Script>
					//me.startAction('rotateMe');
				</Script>
			</_Scripts>
		</_Action>
		
		<Action>
			<Id>GetAsset</Id>
			<Concurrency>Persistent</Concurrency>
			<Scripts>
				<Script>
					//Stop Action
					me.stopAction("GetAsset");
					
					//Get Url
					var userName = me.getState('assetUserName');
					var type = me.getState('assetType');
					var assetName = me.getState('assetName');
					var fileId = StringTools.replace(assetName,".","/") + ".egc";
					
					me.setState('fileId', fileId);
					me.setState('fileUrl', '/assets/' + userName + '/' + type + '/' + fileId);
					Display.error("DEBUG LOG1: The url to access: " + me.getState('fileId'));
					Display.error("DEBUG LOG2: The url to access: " + me.getState('fileUrl'));
					
					//Parse The Xml
					var importXml = Xml.parse(Assets.getFile(me.getState('fileId')).toString()).firstElement();
					
					me.getAction('AssetLoaded').setState('importXml',importXml);
					me.startAction('AssetLoaded');
				</Script>
			</Scripts>
		</Action>
		
		<Action>
			<Id>AssetLoaded</Id>
			<Concurrency>Persistent</Concurrency>
			<Scripts>
				<Script>
					//Override me...
					me.stopAction("AssetLoaded");
				</Script>
			</Scripts>
			<States>
				<State><Id>importXml</Id><Type>Dynamic</Type><Value>null</Value></State>
			</States>
		</Action>
	</_Actions>
</Entity>