<?xml version="1.0" encoding="utf-8"?>
<Entity extends="std.display.CodeEditor">
	<_Actions>
		<_Action id="Constructor">
			<_Scripts>
				<Script>
					//Display.projectActiveSpaceReference.activeStageReference.layoutManager.validated=false;
				</Script>
			</_Scripts>
		</_Action>
	</_Actions>
				
	<_States>
		<_State id="name">
			<Value>Code Editor</Value>
		</_State>

	</_States>
	
	<_Actions>
		<Action>
			<Id>showAsset</Id>
			<Concurrency>Persistent</Concurrency>
			<Scripts>
				<Script>
					var asset = me.getAction('showAsset').getState('asset');
				
					var ace = me.getState('aceObject');
					
					ace.resize();
					ace.setReadOnly(false);
					ace.setShowPrintMargin(false);
					//if (currentScriptUrl!=null) saveCurrentScript();
					
					//url=url.substr(1);
					
					////Temp thing for Cross Domain requests during TESTING //REMOVE ME ON RELEASE
					var url = 'http://130.211.172.86/assets/' + asset.owner.user.name + '/' + asset.type + '/' + asset.dir + '/' + asset.fileName + '.' + asset.fileExtension;
					//var url = '/assets/' + asset.owner.user.name + '/' + asset.type + '/' + asset.dir + '/' + asset.fileName + '.' + asset.fileExtension;
					
					var xmlhttp;
					var text;
					xmlhttp = new XMLHttpRequest();
					
					//xmlhttp.open('GET', url +"?" + new Date().getTime(), false);
					xmlhttp.open('GET', url , false);
					xmlhttp.send();
					text = xmlhttp.responseText;

					ace.setValue(text, -1);
					
					//currentScriptUrl=url;

					
					me.stopAction("showAsset");
				</Script>
			</Scripts>
			<States>
				<State><Id>asset</Id><Type>Dynamic</Type><Value>null</Value></State>
			</States>
		</Action>
	
		<Action>
			<Id>showString</Id>
			<Concurrency>Persistent</Concurrency>
			<Scripts>
				<Script>
					var contentStr = this.getState('contentStr');
				
					var ace = me.getState('aceObject');
					
					ace.resize();
					ace.setReadOnly(false);
					ace.setShowPrintMargin(false);


					var text;
					
					text = contentStr;

					
					
					
					ace.setValue(text, -1);
					
					//currentScriptUrl=url;

					
					me.stopAction("showString");
				</Script>
			</Scripts>
			<States>
				<State><Id>contentStr</Id><Type>Dynamic</Type><Value>null</Value></State>
			</States>
		</Action>
	</_Actions>
</Entity>