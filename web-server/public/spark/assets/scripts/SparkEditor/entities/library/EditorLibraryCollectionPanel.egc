<?xml version="1.0" encoding="utf-8"?>
<Entity extends="std.display.Div">
	<_States>
		<_State id="gap"><Value>0</Value></_State>
		<_State id="width"><Value>100%</Value></_State>
		<_State id="height"><Value>100%</Value></_State> <!-- this keeps it from growing very tall otuside the view.. should really be 100%.. overflow visible lets things outside 500 height to keep showing-->
		<!--<_State id="overflow"><Value>scroll</Value></_State>-->
		<_State id="display"><Value>none</Value></_State>
		<State><Id>selectedSubCategoryObject</Id><Type>Dynamic</Type><Value>null</Value></State>
		<State><Id>importTypes</Id><Type>Dynamic</Type><Value>null</Value></State>
		<State><Id>containerPanel</Id><Type>Dynamic</Type><Value>null</Value></State>
		<State><Id>tileWidth</Id><Type>Integer</Type><Value>50</Value></State>
		<State><Id>tileHeight</Id><Type>Integer</Type><Value>50</Value></State>
		<State><Id>tileUploadingImageName</Id><Type>Text</Type><Value>Undefined</Value></State>
	</_States>
	
	<_Actions>
		<Action>
			<Id>AddItems</Id>
			<Concurrency>Persistent</Concurrency>
			<Scripts>
				<Script>
					var container2d = Logic.getEntityByName('LibraryTilesContainer');
					var components = me.getAction('AddItems').getState('items');
					
					//var username = Logic.getEntityByName('Spark Editor').getState('username');
					var i = 0;
					while (components.length>i)
					{
						var asset = components[i];
						var myNewItem = Logic.gameFactory.createGameEntity('SparkEditor.entities.library.EditorLibraryItem');
						myNewItem.setState('asset',asset);
						
						var assetUrl = 'assets/' + 'spark' + '/' + asset.type + '/' + asset.dir + '/' + asset.fileName + '.' + asset.fileExtension;
						
						myNewItem.setState('imageName',assetUrl);
						myNewItem.setState('width','40');
						myNewItem.setState('height','40');
						
						container2d.addChild(myNewItem);
						Display.error('asset #' + i + ':' + asset.fileName);
						//Display.error(components[i].assets);
						
						i+=1;
					}
					
					Display.projectActiveSpaceReference.activeStageReference.layoutManager.validated=false;
					me.stopAction("AddItem");
				</Script>
			</Scripts>
			<States>
				<State><Id>items</Id><Type>Dynamic</Type><Value>null</Value></State>
			</States>
		</Action>
				
		<Action>
			<Id>UploadFile</Id>
			<Concurrency>Persistent</Concurrency>
			<Scripts>
				<Script>
					me.stopAction("UploadFile");
					var file = me.getAction('UploadFile').getState('file');
					var componentType = me.getAction('UploadFile').getState('componentType');
					var assetType = me.getAction('UploadFile').getState('assetType');
					var tags = me.getAction('UploadFile').getState('tags');
					
					var containerPanel = me.getState('containerPanel');
					
					var newItem = Logic.gameFactory.createGameEntityExtended('SparkEditor.entities.library.EditorLibraryItem', 'SparkEditor.entities.library.EditorLibraryItemUpload');
					//var username = Logic.getEntityByName('Spark Editor').getState('username');
					//var asset = components[i];
					//var myNewItem = Logic.gameFactory.createGameEntity('SparkEditor.entities.library.EditorLibraryItem');
					//myNewItem.setState('asset',asset);
					
					//var assetUrl = 'assets/' + 'spark' + '/' + asset.type + '/' + asset.dir + '/' + asset.fileName + '.' + asset.fileExtension;

					//myNewItem.setState('imageName',assetUrl);
					newItem.setState('imageName',me.getState('tileUploadingImageName'));
					newItem.setState('width',Std.string(me.getState('tileWidth')));
					newItem.setState('height',Std.string(me.getState('tileHeight')));
					newItem.setState('name',file.name);
					
					
					newItem.setState('fileSize',file.size);
					newItem.setState('componentType',componentType);
					newItem.setState('assetType',assetType);
					newItem.setState('tags',tags);
					
					containerPanel.addChild(newItem);
					//Display.error('asset #' + i + ':' + asset.fileName);
					//Display.error(components[i].assets);
					
					
					Display.projectActiveSpaceReference.activeStageReference.layoutManager.validated=false;
					
				</Script>
			</Scripts>
			<States>
				<State><Id>file</Id><Type>Dynamic</Type><Value>null</Value></State>
				<State><Id>componentType</Id><Type>Text</Type><Value>Undefined</Value></State>
				<State><Id>assetType</Id><Type>Text</Type><Value>Undefined</Value></State>
				<State><Id>tags</Id><Type>Text</Type><Value>Undefined</Value></State>
			</States>
		</Action>
	</_Actions>
	
	<Form>
		<Space>
			<Entities>
				<!-- List -->
				<Entity extends="std.display.Group">
					<_States>
						<_State id="layout"><Value>Tile</Value></_State>
						<_State id="horizontalAlign"><Value>justify</Value></_State>
						<_State id="verticalAlign"><Value>justify</Value></_State>
							
						<!--<_State id="requestedColumnCount"><Value>5</Value></_State>-->
							
						<_State id="horizontalGap"><Value>6</Value></_State>
						<_State id="verticalGap"><Value>6</Value></_State>
							
						<_State id="paddingLeft"><Value>6</Value></_State>
						<_State id="paddingRight"><Value>6</Value></_State>
						<_State id="paddingTop"><Value>6</Value></_State>
						<_State id="paddingBottom"><Value>6</Value></_State>
						<!--<_State id="overflow"><Value>scroll</Value></_State>-->
					</_States>
						
					<_Actions><_Action id="Constructor"><_Scripts><Script>
						//parent.setState('imageObject',me);
						parent.setState('containerPanel',me);
					</Script></_Scripts></_Action></_Actions>
				</Entity>
			</Entities>
		</Space>
	</Form>
</Entity>