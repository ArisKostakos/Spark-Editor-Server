<?xml version="1.0" encoding="utf-8"?>
<Entity extends="std.display.Div">
	<_States>
		<_State id="name"><Value>Login Panel</Value></_State>
		<_State id="width"><Value>512</Value></_State>
		<_State id="height"><Value>377</Value></_State>
		<_State id="display"><Value>inline</Value></_State>
		<_State id="horizontalCenter"><Value>0</Value></_State>
		<_State id="verticalCenter"><Value>0</Value></_State>
		
		<_State id="backgroundColor"><Value>#21303D</Value></_State>
		<_State id="borderRadius"><Value>12px</Value></_State>
		<_State id="boxShadow"><Value>5px 5px 10px rgba(0, 0, 0, 0.3)</Value></_State>
		
		<State><Id>userInput</Id><Type>Dynamic</Type><Value>null</Value></State>
		<State><Id>passwordInput</Id><Type>Dynamic</Type><Value>null</Value></State>
		<State><Id>outputText</Id><Type>Dynamic</Type><Value>null</Value></State>
		<State><Id>defaultProject</Id><Type>Text</Type><Value>blank</Value></State>
		<State><Id>defaultForkTemplate</Id><Type>Text</Type><Value>blank</Value></State>
	</_States>
	
	<Form>
		<Space>
			<Entities>
				<!-- Connected Light -->
				<Entity extends="std.display.Div"><_States>
					<_State id="name"><Value>Login Connected Light</Value></_State>
					<_State id="borderRadius"><Value>50%</Value></_State>
					<_State id="backgroundColor"><Value>orange</Value></_State>
					<_State id="width"><Value>10</Value></_State>
					<_State id="height"><Value>10</Value></_State>
					<_State id="top"><Value>10</Value></_State>
					<_State id="left"><Value>10</Value></_State>
				</_States></Entity>
				
				<Entity extends="std.display.VGroup">
					<_States>
						<_State id="width"><Value>100%</Value></_State>
						<_State id="height"><Value>100%</Value></_State>
						<_State id="gap"><Value>3</Value></_State>
						<_State id="horizontalAlign"><Value>center</Value></_State>
						<_State id="verticalAlign"><Value>top</Value></_State>
						<_State id="paddingLeft"><Value>42</Value></_State>
						<_State id="paddingRight"><Value>38</Value></_State>
						<_State id="paddingTop"><Value>52</Value></_State>
						<_State id="paddingBottom"><Value>49</Value></_State>
					</_States>
					<Form><Space><Entities>
						<!-- Sign Up Button -->
						<Entity extends="std.display.Button"><_States>
							<_State id="name"><Value>Sign Up Button</Value></_State>
							<_State id="width"><Value>100%</Value></_State>
							<_State id="height"><Value>49</Value></_State>
							<_State id="backgroundColor"><Value>rgb(231, 47, 87)</Value></_State>
							<_State id="border"><Value>0px</Value></_State>
							<_State id="textAlign"><Value>center</Value></_State>
							<_State id="textVerticalAlign"><Value>middle</Value></_State>
							<_State id="text"><Value>Sign Up</Value></_State>
							<_State id="fontFamily"><Value>'Ubuntu', sans-serif</Value></_State>
							<_State id="fontSize"><Value>30px</Value></_State>
							<_State id="fontColor"><Value>white</Value></_State>
						</_States>
						<_Triggers><Trigger><Event>MouseLeftClick</Event><Scripts>
						<Script>
							var loginPanel = Logic.getEntityByName('Login Panel');
							
							loginPanel.setState('display','none');
							loginPanel.parentEntity.getState('signupPanel').getState('nameInput').setState('text','');
							loginPanel.parentEntity.getState('signupPanel').getState('emailInput').setState('text','');
							loginPanel.parentEntity.getState('signupPanel').getState('alphaInput').setState('text','');
							loginPanel.parentEntity.getState('signupPanel').getState('userInput').setState('text','');
							loginPanel.parentEntity.getState('signupPanel').getState('passInput').setState('text','');
							loginPanel.parentEntity.getState('signupPanel').getState('vpassInput').setState('text','');
							loginPanel.parentEntity.getState('signupPanel').getState('outputText').setState('text','');
							loginPanel.parentEntity.getState('signupPanel').setState('display','inline');
						</Script>
						</Scripts></Trigger></_Triggers></Entity>
						
						<!-- Spacer -->
						<Entity extends="std.display.Group"><_States><_State id="height"><Value>39</Value></_State></_States></Entity>
						
						<!-- User Name -->
						<Entity extends="std.display.HGroup"><_States>
							<_State id="width"><Value>100%</Value></_State>
							<_State id="gap"><Value>3</Value></_State></_States><Form><Space><Entities>
								<Entity extends="std.display.Div"><_States>
									<_State id="name"><Value>UserBox</Value></_State>
									<_State id="width"><Value>49</Value></_State>
									<_State id="height"><Value>49</Value></_State>
									<_State id="backgroundColor"><Value>rgb(59, 185, 176)</Value></_State></_States>
								<Form><Space><Entities><Entity extends="std.display.Image"><_States>
										<_State id="name"><Value>UserImage</Value></_State>
										<_State id="width"><Value>24</Value></_State>
										<_State id="height"><Value>26</Value></_State>
										<_State id="horizontalCenter"><Value>0</Value></_State>
										<_State id="verticalCenter"><Value>0</Value></_State>
										<_State id="src"><Value>userIcon</Value></_State>
								</_States></Entity></Entities></Space></Form></Entity>
								
								<Entity extends="std.display.Input"><_States>
									<_State id="width"><Value>100%</Value></_State>
									<_State id="height"><Value>47</Value></_State>
									<_State id="backgroundColor"><Value>rgb(61, 77, 95)</Value></_State>
									<_State id="border"><Value>0px</Value></_State>
									<_State id="placeholder"><Value>User Name</Value></_State>
									<_State id="fontFamily"><Value>'Ubuntu', sans-serif</Value></_State>
									<_State id="fontSize"><Value>23px</Value></_State>
									<_State id="fontColor"><Value>white</Value></_State>
									<_State id="textIndent"><Value>12px</Value></_State>
									<_State id="acceptsKeyboardInput"><Value>true</Value></_State>
								</_States>
								<_Actions><_Action id="Constructor"><_Scripts><Script>
									Logic.getEntityByName('Login Panel').setState('userInput',me);
								</Script></_Scripts></_Action></_Actions>
									<_Triggers><Trigger><Event>KeyReleasedLocal</Event><Scripts>
								<Script>
								var loginPanel = Logic.getEntityByName('Login Panel');
								
								var eventObjectKeyRelease = me.getState('eventObjectKeyRelease');
								Display.error("KEY RELEASEE");
								if (eventObjectKeyRelease.keyCode==33 || eventObjectKeyRelease.keyCode==34)
								{
									var projectEntity = Logic.rootGameEntitiesRunning.get('SparkEditor.MainProject');
									if (projectEntity.getState('Connected')==true)
									{
										var strUser =loginPanel.getState('userInput').getState('text');
										var strPass =loginPanel.getState('passwordInput').getState('text');
									
										if (eventObjectKeyRelease.keyCode==33) //Page Up
										{
											strUser = 'test3';
											strPass = 'lala3';
										}
										else if (eventObjectKeyRelease.keyCode==34) //Page Down
										{
											strUser = 'spark';
											strPass = '12qw!@QW ';
											Logic.getEntityByName('Spark Editor').setState('adminMode',true);
										}
										
										
										if (strUser.length>0 && strUser!='Undefined' &&
											strPass.length>0 && strPass!='Undefined')
										{
											loginPanel.getState('outputText').setState('text', 'Please wait...');
											
											
											Comms.request("registration.loginHandler.login", { 	uid: projectEntity.getState('UniqueId'), 
																								username: strUser, 
																								password: strPass}, "Log In Request");
																								
											
											Logic.getEntityByName('Spark Editor').setState('username',strUser);
										}
										else
										{
											loginPanel.getState('outputText').setState('text', 'Please fill in every field.');
										}
									}
									else
									{
										loginPanel.getState('outputText').setState('text', 'Client has not connected yet! Be patient...');
									}
								}
								</Script></Scripts></Trigger>
							</_Triggers>
						</Entity>
						</Entities></Space></Form></Entity>
						
						<!-- Password -->
						<Entity extends="std.display.HGroup"><_States>
							<_State id="width"><Value>100%</Value></_State>
							<_State id="gap"><Value>3</Value></_State></_States><Form><Space><Entities>
							<Entity extends="std.display.Div"><_States>
								<_State id="name"><Value>PasswordBox</Value></_State>
								<_State id="width"><Value>49</Value></_State>
								<_State id="height"><Value>49</Value></_State>
								<_State id="backgroundColor"><Value>rgb(59, 185, 176)</Value></_State></_States>
							<Form><Space><Entities><Entity extends="std.display.Image"><_States>
									<_State id="name"><Value>PasswordImage</Value></_State>
									<_State id="width"><Value>17</Value></_State>
									<_State id="height"><Value>23</Value></_State>
									<_State id="horizontalCenter"><Value>0</Value></_State>
									<_State id="verticalCenter"><Value>0</Value></_State>
									<_State id="src"><Value>passwordIcon</Value></_State>
							</_States></Entity></Entities></Space></Form></Entity>
							
							<Entity extends="std.display.Input"><_States>
								<_State id="width"><Value>100%</Value></_State>
								<_State id="height"><Value>47</Value></_State>
								<_State id="backgroundColor"><Value>rgb(61, 77, 95)</Value></_State>
								<_State id="border"><Value>0px</Value></_State>
								<_State id="placeholder"><Value>Password</Value></_State>
								<_State id="type"><Value>password</Value></_State>
								<_State id="fontFamily"><Value>'Ubuntu', sans-serif</Value></_State>
								<_State id="fontSize"><Value>23px</Value></_State>
								<_State id="fontColor"><Value>white</Value></_State>
								<_State id="textIndent"><Value>12px</Value></_State>
								<_State id="acceptsKeyboardInput"><Value>true</Value></_State>
							</_States>
							<_Actions><_Action id="Constructor"><_Scripts><Script>
								Logic.getEntityByName('Login Panel').setState('passwordInput',me);
							</Script></_Scripts></_Action></_Actions>
							<_Triggers><Trigger><Event>KeyPressedLocal</Event><Scripts>
								<Script>
								var loginPanel = Logic.getEntityByName('Login Panel');
								var eventObjectKeyPress = me.getState('eventObjectKeyPress');
								
								if (eventObjectKeyPress.keyCode==13 || eventObjectKeyPress.keyCode==10)
								{
									var projectEntity = Logic.rootGameEntitiesRunning.get('SparkEditor.MainProject');
									if (projectEntity.getState('Connected')==true)
									{
										var strUser =loginPanel.getState('userInput').getState('text');
										var strPass =loginPanel.getState('passwordInput').getState('text');
										
										if (strUser.length>0 && strUser!='Undefined' &&
											strPass.length>0 && strPass!='Undefined')
										{
											loginPanel.getState('outputText').setState('text', 'Please wait...');
											
											
											Comms.request("registration.loginHandler.login", { 	uid: projectEntity.getState('UniqueId'), 
																								username: strUser, 
																								password: strPass}, "Log In Request");
																								
											if (eventObjectKeyPress.keyCode==10)
												Logic.getEntityByName('Spark Editor').setState('adminMode',true);
											
											Logic.getEntityByName('Spark Editor').setState('username',strUser);
										}
										else
										{
											loginPanel.getState('outputText').setState('text', 'Please fill in every field.');
										}
									}
									else
									{
										loginPanel.getState('outputText').setState('text', 'Client has not connected yet! Be patient...');
									}
								}
								</Script></Scripts></Trigger>
							</_Triggers></Entity>
						</Entities></Space></Form></Entity>
						
						<!-- Login Button -->
						<Entity extends="std.display.Button"><_States>
							<_State id="name"><Value>Login Button</Value></_State>
							<_State id="width"><Value>100%</Value></_State>
							<_State id="height"><Value>49</Value></_State>
							<_State id="textAlign"><Value>center</Value></_State>
							<_State id="textVerticalAlign"><Value>middle</Value></_State>
							<_State id="backgroundColor"><Value>rgb(59, 185, 176)</Value></_State>
							<_State id="border"><Value>0px</Value></_State>
							<_State id="text"><Value>Log in</Value></_State>
							<_State id="fontFamily"><Value>'Ubuntu', sans-serif</Value></_State>
							<_State id="fontSize"><Value>30px</Value></_State>
							<_State id="fontColor"><Value>white</Value></_State>
						</_States>
						<_Triggers><Trigger><Event>MouseLeftClick</Event><Scripts>
						<Script>
							var loginPanel = Logic.getEntityByName('Login Panel');
							var projectEntity = Logic.rootGameEntitiesRunning.get('SparkEditor.MainProject');
							if (projectEntity.getState('Connected')==true)
							{
								var strUser =loginPanel.getState('userInput').getState('text');
								var strPass =loginPanel.getState('passwordInput').getState('text');
								//strUser = 'aris';
								//strPass = 'r0diof';
								//strUser = 'test3';
								//strPass = 'lala3';
								//strUser = 'spark';
								//strPass = '12qw!@QW ';
								
								
								if (strUser.length>0 && strUser!='Undefined' &&
									strPass.length>0 && strPass!='Undefined')
								{
									loginPanel.getState('outputText').setState('text', 'Please wait...');
									
									Comms.request("registration.loginHandler.login", { 	uid: projectEntity.getState('UniqueId'), 
																						username: strUser, 
																						password: strPass}, "Log In Request");
																						
									Logic.getEntityByName('Spark Editor').setState('username',strUser);
								}
								else
								{
									loginPanel.getState('outputText').setState('text', 'Please fill in every field.');
								}
									
							}
							else
							{
								loginPanel.getState('outputText').setState('text', 'Client has not connected yet! Be patient...');
							}
						</Script>
						</Scripts></Trigger></_Triggers></Entity>
						
						
						
						<!-- Spacer -->
						<Entity extends="std.display.Group"><_States><_State id="height"><Value>10</Value></_State></_States></Entity>
						
						<!-- Output Text -->
						<Entity extends="std.display.Text"><_States>
							<_State id="width"><Value>100%</Value></_State>
							<_State id="height"><Value>49</Value></_State>
							<_State id="fontFamily"><Value>'Ubuntu', sans-serif</Value></_State>
							<_State id="fontSize"><Value>22px</Value></_State>
							<_State id="fontColor"><Value>white</Value></_State>
							<_State id="textAlign"><Value>center</Value></_State>
						</_States><_Actions><_Action id="Constructor"><_Scripts><Script>
						Logic.getEntityByName('Login Panel').setState('outputText',me);
						</Script></_Scripts></_Action></_Actions></Entity>
					</Entities></Space></Form>
				</Entity>
			</Entities>
		</Space>
	</Form>
	
	<_Actions>
		<_Action id="Constructor">
			<_Scripts>
				<Script>
					/*
						//enter project gui
						Logic.getEntityByName('Dom View').setState('visible',false);

						Logic.getEntityByName('Navigation Bar View').setState('visible',true);
						Logic.getEntityByName('Editor Left View').setState('visible',true);
						//Logic.getEntityByName('Editor Bottom View').setState('visible',true);
						//Logic.getEntityByName('Editor Right View').setState('visible',true);
						//Logic.getEntityByName('Editor Viewport View').setState('visible',true);
						
						Logic.getEntityByName('Editor Top Bar Panel').setState('display','inline');
						Logic.getEntityByName('Lobby Mode Panel').setState('display','none');
						Logic.getEntityByName('NavigationBar').setState('height','74');
					*/
				</Script>
			</_Scripts>
		</_Action>
	</_Actions>
	
	<_Triggers>
		<Trigger>
			<Event>NetworkRequest</Event>
			<Target>TargetNone</Target>
			<Scripts>
				<Script>
					if (Comms.getRequestData("Log In Request")!=null)
					{
						var data = Comms.getRequestData("Log In Request");
						
						if (data.code=="match")
						{
							me.getState('outputText').setState('text', 'Logged in. Entering lobby...');
							Comms.request("lobby.projectHandler.listUserProjects", {}, "Request All My Projects");
						}
						else if (data.code=="nomatch")
						{
							//Display.error("Log In Panel: Unknown UserName/Password!");
							me.getState('outputText').setState('text', 'Username or Password not valid!');
						}
						else if (data.code=="error")
						{
							//Display.error("Log In Panel: Unknown Error");
							me.getState('outputText').setState('text', 'An unknown error occured.');
						}
					}
					/*else if (Comms.getRequestData("Create Project Request")!=null)
					{
						var data = Comms.getRequestData("Create Project Request");
						
						if (data.code=="success")
						{
							Logic.getEntityByName('Spark Editor').setState('projectname',data.project.projectname);

							//Logic.getEntityByName('Top Bar Username Text').setState('text','Username: ' + Logic.getEntityByName('Spark Editor').getState('username'));
							//Logic.getEntityByName('Top Bar Project Text').setState('text','Project: ' + Logic.getEntityByName('Spark Editor').getState('projectname'));

						
							//query library components
							Comms.request("editor.componentHandler.get", {queryArray: data.project.library}, "Get Components");
						}
						else
						{
							me.getState('outputText').setState('text', 'Error creating project.');
						}
					}
					else if (Comms.getRequestData("Get Components")!=null)
					{
						var data = Comms.getRequestData("Get Components");
						
						if (data.code=="success")
						{
							//Fill Library with components
							var objectsPanel = Logic.getEntityByName('Editor Library Objects Panel');
							
							objectsPanel.getAction('AddItemNoUpload').setState('items', data.components);
							objectsPanel.startAction('AddItemNoUpload');

							//enter project
							Logic.getEntityByName('Dom View').setState('visible',false);
							Logic.getEntityByName('Editor Top Bar View').setState('visible',true);
							Logic.getEntityByName('Editor Left View').setState('visible',true);
							Logic.getEntityByName('Editor Bottom View').setState('visible',true);
							Logic.getEntityByName('Editor Right View').setState('visible',true);
						}
						else
						{
							me.getState('outputText').setState('text', 'Error getting components.');
						}
					}*/
					else if (Comms.getRequestData("Request All My Projects")!=null)
					{
						var data = Comms.getRequestData("Request All My Projects");
						
						if (data.code=="success")
						{
							me.getState('outputText').setState('text', 'Success requesting all my projects!');
							Display.error("Data projects received: " + data.projects);
							
							//Fill Dashboard View with projects
							var dashboardScene;
							if (Logic.getEntityByName('Spark Editor').getState('adminMode')==true)
								dashboardScene = Logic.getEntityByName('Dashboard Admin');
							else
							{
								dashboardScene = Logic.getEntityByName('Dashboard Normal');//Normal //Admin
							}
								
							dashboardScene.setState('display','inline');
							dashboardScene.getAction('AddProjects').setState('items', data.projects);
							dashboardScene.startAction('AddProjects');

							//enter lobby
							Logic.getEntityByName('Top Bar Username Text').setState('text','Username: ' + Logic.getEntityByName('Spark Editor').getState('username'));
							//Logic.getEntityByName('Top Bar Username Text').setState('text','Username: aris');	//NAME MODS
							Logic.getEntityByName('Top Bar Lobby Mode Username').setState('text',Logic.getEntityByName('Spark Editor').getState('username'));
							//Logic.getEntityByName('Top Bar Lobby Mode Username').setState('text',"Aris Kostakos");	//NAME MODS
							Logic.getEntityByName('Dom View').setState('visible',false);
							Logic.getEntityByName('Navigation Bar View').setState('visible',true);
							Logic.getEntityByName('Dashboard View').setState('visible',true);
						}
						else
						{
							me.getState('outputText').setState('text', 'Error requesting all my projects.');
						}
					}
				</Script>
			</Scripts>
		</Trigger>
	</_Triggers>
</Entity>