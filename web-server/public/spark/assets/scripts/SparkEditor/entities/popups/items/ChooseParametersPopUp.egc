<?xml version="1.0" encoding="utf-8"?>
<Entity extends="SparkEditor.entities.popups.PopUpBaseWithArrow">
	<_States>
		<_State id="targetLayerName"><Value>PopUp Layer 1 Scene</Value></_State>
	</_States>

	<_Form>
		<_Space>
			<_Entities>
				<!-- List -->
				<Entity extends="std.display.VGroup">
					<_States>
						<_State id="paddingLeft"><Value>6</Value></_State>
						<_State id="paddingRight"><Value>6</Value></_State>
						<_State id="paddingTop"><Value>6</Value></_State>
						<_State id="paddingBottom"><Value>6</Value></_State>
						<_State id="horizontalAlign"><Value>right</Value></_State>
						<!--<_State id="overflow"><Value>scroll</Value></_State>-->
					</_States>
						
					<_Form>
						<_Space>
							<_Entities>
								<Entity extends="std.display.VGroup">
									<_Actions>
										<_Action id="Constructor">
											<_Scripts>
												<Script>
													var params = parent.parentEntity.getState('argA');
												
													for (param in params)
													{
														Display.error("Name: " + param.name + ", Type: " + param.type);
														var newItemParam = Logic.gameFactory.createGameEntity('SparkEditor.entities.components.assetParameter.ParameterEdit' + param.type);
														newItemParam.setState('parObj',param);
														me.addChild(newItemParam);
													}
													
													Display.invalidateLayout(); //This is mostly to prevent glitches when panel show up..
												</Script>
											</_Scripts>
										</_Action>
									</_Actions>
								</Entity>
												
								<Entity extends="std.display.Button">
									<_States>>
										<_State id="width"><Value>70</Value></_State>
										<_State id="height"><Value>18</Value></_State>
										<_State id="backgroundColor"><Value>rgb(138,181,46)</Value></_State>
										<_State id="layout"><Value>Horizontal</Value></_State>
										<_State id="verticalAlign"><Value>middle</Value></_State>
										<State><Id>buttonText</Id><Type>Text</Type><Value>Done</Value></State>
									</_States>
									
									<Form>
										<Space>
											<Entities>
												<!-- Text -->
												<Entity extends="std.display.Text"><_States>
													<_State id="width"><Value>100%</Value></_State>
													<_State id="height"><Value>16</Value></_State>
													<_State id="fontWeight"><Value>300</Value></_State>
													<_State id="fontFamily"><Value>'Ubuntu', sans-serif</Value></_State>
													<_State id="fontSize"><Value>14px</Value></_State>
													<_State id="fontColor"><Value>white</Value></_State>
													<_State id="textAlign"><Value>center</Value></_State>
													</_States><_Actions><_Action id="Constructor"><_Scripts><Script>
													me.setState('text',parent.getState('buttonText'));
												</Script></_Scripts></_Action></_Actions></Entity>
											</Entities>
										</Space>
									</Form>
									
									<_Triggers>
										<Trigger>
											<Event>MouseLeftClick</Event>
											<Scripts>
												<Script>
													//Close PopUp
													parent.parentEntity.startAction('Close');
													
													//Run Callback with OK
													var cb_caller = parent.parentEntity.getState('cb_caller');
													var cb_action = cb_caller.getAction(parent.parentEntity.getState('cb_actionName'));
													cb_action.setState('cb_result',"OK");
													cb_action.setState('cb_Arg1',parent.parentEntity.getState('argA'));
													
													cb_caller.forceAction(parent.parentEntity.getState('cb_actionName'));
												</Script>
											</Scripts>
										</Trigger>
									</_Triggers>
								</Entity>
							</_Entities>
						</_Space>
					</_Form>
				</Entity>
			</_Entities>
		</_Space>
	</_Form>
</Entity>