<?xml version="1.0" encoding="utf-8"?>
<Entity extends="SparkEditor.entities.editors.Editor">
	<_States>
		<_State id="name"><Value>Project Editor</Value></_State>
	</_States>
	
	<_Actions>
		<Action>
			<Id>RequestProjectDbAssets</Id>
			<Concurrency>Persistent</Concurrency>
			<Scripts>
				<Script>
					me.stopAction("RequestProjectDbAssets");
					
					Comms.request("assets.requestHandler.getProjectAssets", {}, "Project Assets Request");
				</Script>
			</Scripts>
		</Action>
		
	</_Actions>
	
	<_Triggers>
		<Trigger>
			<Event>NetworkRequest</Event>
			<Scripts>
				<Script>
					if (Comms.getRequestData("Project Assets Request")!=null)
					{
						var data = Comms.getRequestData("Project Assets Request");
						
						if (data.code=="success")
						{
							Display.error('Requesting Project Assets success!');
							
							//Get Username
							var userName = me.getState('assetUserName');
							
							var spritesFound = [];
							
							//Initiate Load
							Assets.initiateBatch();
							
							var i = 0;
							while (data.assets.length>i)
							{
								//Get AssetDb
								var asset = data.assets[i];
								
								var assetUrl = '/assets/' + userName + '/' + asset.type + '/' + asset.dir + '/' + asset.fileName + '.' + asset.fileExtension;
								
								Display.error("assetUrl: " + assetUrl);
								var assetId;
								
								//If Asset is Script
								if (asset.type=="script")
								{
									assetId = asset.dir + '/' + asset.fileName + '.' + asset.fileExtension;
								}
								else if (asset.type=="image")
								{
									//Check second tag
									if (asset.tags[1]=='sprite')
									{
										Display.error("!!!! IMAGE FOUND!!!!");
										spritesFound.push(asset);
									}
									//Is it uploaded to be used as a Sprite?
									//..
									//Is it uploaded to be used for Spriter?
									//..
									
									assetId = 'image_' + asset.name;
								}

								Assets.addFile(assetUrl, assetId);
								
								
								Display.error(data.assets[i].name);
								i+=1;
							}
							
							//Fill Library with Sprites
							var objectsPanel = Logic.getEntityByName('Editor Library Objects Panel');
							
							objectsPanel.getAction('AddItemNoUpload').setState('items', spritesFound);
							objectsPanel.startAction('AddItemNoUpload');
							
							//Event Listener
							Assets.successSignal.connect(function () {
							
								//temp scene stuff
								var sceneEditor = Logic.getEntityByName('2d Scene Editor');
								sceneEditor.setState('assetUserName', userName);
								sceneEditor.setState('assetType','script');
								sceneEditor.setState('assetName','blank.scenes.MainScene');
								sceneEditor.startAction('GetAsset');
							
								//enter project gui
								Logic.getEntityByName('Dom View').setState('visible',false);

								Logic.getEntityByName('Editor Top Bar View').setState('visible',true);
								Logic.getEntityByName('Editor Left Bar View').setState('visible',true);
							
								//me.setState('xmlPure',Xml.parse(Assets.getFile(me.getState('fileId')).toString()).firstElement());
								//me.setState('xmlEdit',Xml.parse(Assets.getFile(me.getState('fileId')).toString()).firstElement());
								//me.startAction('AssetLoaded');
							}).once();
							
							//Load
							Assets.loadBatch();
						}
						else
						{
							Display.error('Error Requesting Project Assets!');
						}
					}
				</Script>
			</Scripts>
		</Trigger>
	</_Triggers>
</Entity>