<?xml version="1.0" encoding="utf-8"?>
<Entity extends="std.display.VGroup">

	<_States>
		<_State id="name"><Value>Event Collection Edit</Value></_State>
		<_State id="width"><Value>100%</Value></_State>
		<_State id="height"><Value>100%</Value></_State>
		<_State id="paddingLeft"><Value>10</Value></_State>
		<_State id="paddingRight"><Value>16</Value></_State>
		<_State id="paddingTop"><Value>16</Value></_State>
		<_State id="paddingBottom"><Value>16</Value></_State>
		<_State id="gap"><Value>4</Value></_State>
		<State><Id>eventsContainer</Id><Type>Dynamic</Type><Value>null</Value></State>
		<State><Id>EventsCount</Id><Type>Integer</Type><Value>0</Value></State>
	</_States>
	
	<Extends>
		<Entity extends="SparkEditor.behaviors.Scrollable"/>
	</Extends>
		
	<Form>
		<Space>
			<Entities>
				<Entity extends="std.display.VGroup">
					<_States>
						<_State id="width"><Value>100%</Value></_State>
					</_States>
				
					<_Actions>
						<_Action id="Constructor"><_Scripts><Script>
							parent.setState('eventsContainer',me);
						</Script></_Scripts></_Action>
					</_Actions>
				</Entity>
				
				<!-- Spacer -->
				<Entity extends="std.display.Group"><_States><_State id="height"><Value>2</Value></_State></_States></Entity>
				
				<Entity extends="std.display.HGroup">
					<_States>
						<_State id="name"><Value>Event Sheet Controls</Value></_State>
						<_State id="width"><Value>100%</Value></_State>
						<!--<_State id="horizontalAlign"><Value>center</Value></_State>-->
						<_State id="verticalAlign"><Value>middle</Value></_State>
						<_State id="gap"><Value>10</Value></_State>
						<_State id="paddingLeft"><Value>8</Value></_State>
					</_States>
					<Form><Space><Entities>
						<!-- Add new event -->
						<Entity extends="SparkEditor.entities.buttons.eventsheet.AddButtonBig">
							<_Triggers><Trigger><Event>MouseLeftClick</Event><Scripts>
								<Script>
									parent.parentEntity.addToState('EventsCount',1);
									
									//create an eventedit
									var eventEdit = Logic.gameFactory.createGameEntity('SparkEditor.entities.editors.rootedits.EventEdit');
									eventEdit.setState('EventId',parent.parentEntity.getState('EventsCount'));
									eventEdit.setState('parentEventSheet',parent.parentEntity);
									
									//add it as child to eventWindow
									parent.parentEntity.getState('eventsContainer').addChild(eventEdit);
									eventEdit.startAction('Create New Instance');
									Display.invalidateLayout();
								</Script>
							</Scripts></Trigger></_Triggers>
						</Entity>
					</Entities></Space></Form>
				</Entity>
			</Entities>
		</Space>
	</Form>
	
	<_Actions>
		<Action>
			<Id>Import Xml</Id>
			<Concurrency>Persistent</Concurrency>
			<Scripts>
				<Script>
					if (me.getState('eventsContainer')!=null)
					{
						me.stopAction('Import Xml');
						
						var importXml = it.getState('importXml');
						
						var eventsContainer = me.getState('eventsContainer');
						var EventsCount = me.getState('EventsCount');
						
						//for each [entity] in [form.space.entities]
						var l_entitiesNode = Logic.xml_getElements(importXml,["Form","Space","Entities"]);
						var entities = l_entitiesNode.elementsNamed('Entity');
						while (entities.hasNext())
						{
							var entityChildXml = entities.next();
							
							EventsCount += 1;
							//create an eventedit
							var eventEdit = Logic.gameFactory.createGameEntity('SparkEditor.entities.editors.rootedits.EventEdit');
							eventEdit.setState('EventId',EventsCount);
							eventEdit.setState('parentEventSheet',me);
							
							//add it as child to eventWindow
							eventsContainer.addChild(eventEdit);
							eventEdit.getAction('Import Xml').setState('importXml',entityChildXml);
							eventEdit.startAction('Import Xml');
							
						}
						
						me.setState('EventsCount',EventsCount);
						//Display.projectActiveSpaceReference.activeStageReference.layoutManager.validated=false;
					}
				</Script>
			</Scripts>
			<States>
				<State><Id>importXml</Id><Type>Dynamic</Type><Value>null</Value></State>
			</States>
		</Action>
	</_Actions>
</Entity>