<?xml version="1.0" encoding="utf-8"?>
<Entity extends="std.display.Div">

	<_States>
		<_State id="name">
			<Value>Dashboard Normal</Value>
		</_State>
		<_State id="width"><Value>100%</Value></_State>
		<_State id="height"><Value>100%</Value></_State>
		<_State id="display"><Value>none</Value></_State>
		<_State id="layout"><Value>Horizontal</Value></_State>
	</_States>
	
	<Form>
		<Space>
			<Entities>
				<!-- Background 
				<Entity extends="std.display.Div">
					<_States>
						<_State id="width"><Value>100%</Value></_State>
						<_State id="height"><Value>100%</Value></_State>
						<_State id="backgroundColor"><Value>rgb(66,84,102)</Value></_State>
					</_States>
				</Entity>-->
				
				<!-- Create New -->
				<Entity extends="std.display.Group">
					<_States>
						<_State id="name"><Value>New Project</Value></_State>
						<_State id="width"><Value>100%</Value></_State>
						<_State id="height"><Value>100%</Value></_State>
					</_States>
						
					<Form><Space><Entities>
						<Entity extends="SparkEditor.entities.lobby.projects.NewProjectPopUp">
							<_States>
								<_State id="width"><Value>714</Value></_State>
								<_State id="height"><Value>708</Value></_State>
								<_State id="horizontalCenter"><Value>0</Value></_State>
								<_State id="verticalCenter"><Value>0</Value></_State>
							</_States>
						</Entity>
					</Entities></Space></Form>
				</Entity>
				
				<!-- My Projects -->
				<Entity extends="std.display.Group">
					<_States>
						<_State id="name"><Value>Lobby Projects Container Normal</Value></_State>
						<_State id="layout"><Value>Tile</Value></_State>
						<_State id="width"><Value>100%</Value></_State>
						<_State id="height"><Value>100%</Value></_State>
						<_State id="horizontalAlign"><Value>justify</Value></_State>
						<_State id="verticalAlign"><Value>justify</Value></_State>
						<_State id="paddingLeft"><Value>90</Value></_State><!-- 30 -->
						<_State id="paddingRight"><Value>10</Value></_State>
						<_State id="paddingTop"><Value>60</Value></_State><!-- 30 -->
						<_State id="paddingBottom"><Value>10</Value></_State>
						<_State id="horizontalGap"><Value>20</Value></_State><!-- 12 -->
						<_State id="verticalGap"><Value>20</Value></_State><!-- 12 -->
					</_States>
					<Form><Space><Entities>
						<!-- Create New 
						<Entity extends="SparkEditor.entities.lobby.projects.ProjectTile"><_States>
							<_State id="projectName"><Value>Create New</Value></_State>
							<_State id="imageName"><Value>lobbyProject_NewProject</Value></_State>
						</_States>
						<_Actions>
							<_Action id="ButtonClicked">
								<_Scripts>
									<Script>
										Display.error("ok this works fine..");
										Logic.getEntityByName('Pop Up Area').setState('display','inline');
									</Script>
								</_Scripts>
							</_Action>
						</_Actions>
						</Entity>-->
					</Entities></Space></Form>
				</Entity>
			
			
				<!-- Pop Up Area 
				<Entity extends="std.display.Div">
					<_States>
						<_State id="name"><Value>Pop Up Area</Value></_State>
						<_State id="width"><Value>100%</Value></_State>
						<_State id="height"><Value>100%</Value></_State>
						<_State id="display"><Value>none</Value></_State>
					</_States>
					<!--children
					<Form><Space><Entities>
						<!-- Background Area 
						<Entity extends="std.display.Div">
							<_States>
								<_State id="width"><Value>100%</Value></_State>
								<_State id="height"><Value>100%</Value></_State>
								<_State id="backgroundColor"><Value>white</Value></_State>
								<_State id="opacity"><Value>0.07</Value></_State>
							</_States>
						</Entity>
						
						<!-- New Project Pop Up 
						<Entity extends="SparkEditor.entities.lobby.projects.NewProjectPopUp">
							<_States>
								<_State id="horizontalCenter"><Value>0</Value></_State>
								<_State id="verticalCenter"><Value>0</Value></_State>
							</_States>
						</Entity>
					</Entities></Space></Form>
				</Entity>-->
							
							
			</Entities>
		</Space>
	</Form>
	
	<_Triggers>
		<Trigger>
			<Event>NetworkRequest</Event>
			<Scripts>
				<Script>
					if (Comms.getRequestData("Lobby: Open Project")!=null)
					{
						var data = Comms.getRequestData("Lobby: Open Project");
						
						if (data.code=="success")
						{
							Display.error("Project found. Connecting...");
							
							Logic.getEntityByName('Top Bar Project Text').setState('text','Project: ' + Logic.getEntityByName('Spark Editor').getState('projectname'));
							//Logic.getEntityByName('Top Bar Project Text').setState('text','Project: My first game!'); //NAME MODS

							//Try some init stuff
							Display.error("Doing INIT stuff!");
							var projectEditor = Logic.getEntityByName('Project Editor');
							projectEditor.setState('assetUserName',Logic.getEntityByName('Spark Editor').getState('username'));
							projectEditor.startAction('RequestProjectDbAssets');
						}
						else if (data.code=="notfound")
						{
							Display.error("Project does't exist.");
						}
						else
						{
							Display.error('Error connecting to project.');
						}
					}
				</Script>
			</Scripts>
		</Trigger>
	</_Triggers>
	
	<_Actions>
		<Action>
			<Id>AddProjects</Id>
			<Concurrency>Persistent</Concurrency>
			<Scripts>
				<Script>
					var projectsContainer = Logic.getEntityByName('Lobby Projects Container Normal');
					var projects = me.getAction('AddProjects').getState('items');

					var i = 0;
					while (projects.length>i)
					{
						var myNewItem = Logic.gameFactory.createGameEntity('SparkEditor.entities.lobby.projects.ProjectTile');

						myNewItem.setState('projectName',projects[i].title);
						myNewItem.setState('imageName','lobbyProjectTemplate_Platform_Thumb');
						myNewItem.setState('project',projects[i]);
						projectsContainer.addChild(myNewItem);
						
						i+=1;
					}
					Display.projectActiveSpaceReference.activeStageReference.layoutManager.validated=false;
					me.stopAction("AddProjects");
				</Script>
			</Scripts>
			<States>
				<State><Id>items</Id><Type>Dynamic</Type><Value>null</Value></State>
			</States>
		</Action>
	</_Actions>
</Entity>