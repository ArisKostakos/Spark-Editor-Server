<Entity extends="std.display.Image2D">
	<_States>
		<_State id="2DMeshImageForm"><Value>treeEyes</Value></_State>
		<_State id="spaceX"><Value>265</Value></_State>
		<_State id="spaceY"><Value>1026</Value></_State>
		<_State id="scaleX"><Value>1.1</Value></_State>
		<_State id="scaleY"><Value>1.1</Value></_State>
		<_State id="physicsEntity"><Value>false</Value></_State>
		<_State id="opacity"><Value>0</Value></_State>
	</_States>
		
	<_Actions>
		<_Action id="Constructor">
			<_Scripts>
				<Script>
					me.sa('WaitFor',{delay:2, cbEntity:me, cbAction:"Sneek In"});
				</Script>
			</_Scripts>
		</_Action>
			
		<Action>
			<Id>Sneek In</Id>
			<Concurrency>Persistent</Concurrency>
			<Scripts>
				<Script>
					//forced
					
					me.setState('animate_opacity',{type:"to", to:1, seconds:1, easing:Ease.backOut});
					me.sa('WaitFor',{delay:Logic.random(3,6), cbEntity:me, cbAction:"Sneek Out"});
				</Script>
			</Scripts>
		</Action>
				
		<Action>
			<Id>Sneek Out</Id>
			<Concurrency>Persistent</Concurrency>
			<Scripts>
				<Script>
					//forced
					
					me.setState('animate_opacity',{type:"to", to:0, seconds:0.5, easing:Ease.backOut});
					me.sa('WaitFor',{delay:Logic.random(10,16), cbEntity:me, cbAction:"Sneek In"});
				</Script>
			</Scripts>
		</Action>
			
		<Action>
			<Id>WaitFor</Id>
			<Concurrency>Persistent</Concurrency>
			<Scripts>
				<Script><![CDATA[
				    it.addToState('delayCurrent',Logic.getDt());
				    
				    if (it.getState('delayCurrent')>it.getState('delay'))
				    {
					    me.stopAction('WaitFor');
					    
					    //Callback (Action finished)
						it.setState('delayCurrent',0);
						it.s('cbEntity').fa(it.s('cbAction'));
					}
				]]></Script>
			</Scripts>
			<States>
				<State><Id>delayCurrent</Id><Type>Decimal</Type><Value>0</Value></State>
				<State><Id>delay</Id><Type>Decimal</Type><Value>0</Value></State>
				<State><Id>cbEntity</Id><Type>Dynamic</Type><Value>null</Value></State>
				<State><Id>cbAction</Id><Type>Text</Type><Value>Undefined</Value></State>
			</States>
		</Action>
	</_Actions>
</Entity>