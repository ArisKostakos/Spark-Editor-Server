<Entity extends="std.display.Image2D">
	<_States>
		<_State id="2DMeshImageForm"><Value>card</Value></_State>
		<_State id="spaceX"><Value>0</Value></_State>
		<_State id="spaceY"><Value>0</Value></_State>
		<_State id="scaleX"><Value>1</Value></_State>
		<_State id="scaleY"><Value>1</Value></_State>
		<_State id="physicsEntity"><Value>false</Value></_State>
		<_State id="touchable"><Value>true</Value></_State>
		<State><Id>cardName</Id><Type>Text</Type><Value>Undefined</Value></State>
		<State><Id>obj_image</Id><Type>Dynamic</Type><Value>null</Value></State>
		<State><Id>obj_blank</Id><Type>Dynamic</Type><Value>null</Value></State>
		<State><Id>obj_text</Id><Type>Dynamic</Type><Value>null</Value></State>
		<State><Id>isHidden</Id><Type>Boolean</Type><Value>true</Value></State>
	</_States>
	
	<_Triggers>
		<Trigger>
			<Event>MouseLeftClick</Event>
			<Scripts>
				<Script>
					Display.de("I AM CLICKED!" + me.s('isHidden'));
					
					if (me.s('isHidden'))
						e('Game Manager').fa('Card Clicked',{card:me});
				</Script>
			</Scripts>
		</Trigger>
	</_Triggers>
		
	<_Actions>
		<_Action id="Constructor">
			<_Scripts>
				<Script>
					//Display.de("Hi from card! " + me.s('spaceX'));
					
					var cardImage = Logic.create('std.display.Image2D');
					cardImage.setState('2DMeshImageForm',"image_" + me.s('cardName'));
					//cardImage.setState('2DMeshImageForm',"cloud1"); //YOOO
					cardImage.setState('spaceX',190);
					cardImage.setState('spaceY',170);
					cardImage.setState('scaleX',1);
					cardImage.setState('scaleY',1);
					cardImage.setState('physicsEntity',false);
					cardImage.setState('visible',false);
					me.setState('obj_image',cardImage);
					me.addChild(cardImage);
				</Script>
			</_Scripts>
		</_Action>
		
		<Action>
			<Id>Found</Id>
			<Concurrency>Persistent</Concurrency>
			<Scripts>
				<Script>
					//forced
					
					me.setState('animate_rotation',{type:"by", by:600, seconds:1, easing:Ease.backOut});
					me.setState('animate_opacity',{type:"to", to:0, seconds:1, easing:Ease.backOut});
					me.setState('animate_scaleX',{type:"to", to:0, seconds:1, easing:Ease.backOut});
					me.setState('animate_scaleY',{type:"to", to:0, seconds:1, easing:Ease.backOut});
					me.setState('isHidden',false);
				</Script>
			</Scripts>
		</Action>
		
		<Action>
			<Id>Show</Id>
			<Concurrency>Persistent</Concurrency>
			<Scripts>
				<Script>
					//forced
					
					//if (it.s('playSound'))
						//Sound.playSound("audio_" + me.s('cardName'));  //YOOO
						
						
					me.s('obj_image').setState('visible',true);
					me.s('obj_blank').setState('visible',true);
					me.s('obj_text').setState('visible',true);
					me.setState('isHidden',false);
				</Script>
			</Scripts>
			<States>
				<State><Id>playSound</Id><Type>Boolean</Type><Value>false</Value></State>
			</States>
		</Action>
				
		<Action>
			<Id>Hide</Id>
			<Concurrency>Persistent</Concurrency>
			<Scripts>
				<Script>
					//forced
					
					me.s('obj_image').setState('visible',false);
					me.s('obj_blank').setState('visible',false);
					me.s('obj_text').setState('visible',false);
					me.setState('isHidden',true);
				</Script>
			</Scripts>
		</Action>
	</_Actions>
		
	<Form><Space><Entities>
		
		<Entity extends="std.display.FillRect2D">
			<_States>
				<_State id="2DMeshFillRectForm"><Value>0xFFFFFF</Value></_State>
				<_State id="spaceWidth"><Value>330</Value></_State>
				<_State id="spaceHeight"><Value>360</Value></_State>
				<_State id="spaceX"><Value>190</Value></_State>
				<_State id="spaceY"><Value>200</Value></_State>
				<_State id="scaleX"><Value>1</Value></_State>
				<_State id="scaleY"><Value>1</Value></_State>
				<_State id="physicsEntity"><Value>false</Value></_State>
				<_State id="visible"><Value>false</Value></_State>
			</_States>
			<_Actions>
				<_Action id="Constructor">
					<_Scripts>
						<Script>
							parent.setState('obj_blank',me);
						</Script>
					</_Scripts>
				</_Action>
			</_Actions>
		</Entity>
		
		
		<Entity extends="std.display.Text2D">
			<_States>
				<_State id="2DMeshTextForm"><Value>ComfortGreek</Value></_State>
				<_State id="font"><Value>ComfortGreek</Value></_State>
				<_State id="text"><Value>ΝΑ</Value></_State>
				<_State id="spaceX"><Value>260</Value></_State>
				<_State id="spaceY"><Value>350</Value></_State>
				<_State id="align"><Value>Center</Value></_State>
				<_State id="scaleX"><Value>1.7</Value></_State>
				<_State id="scaleY"><Value>1.7</Value></_State>
				<_State id="physicsEntity"><Value>false</Value></_State>
				<_State id="visible"><Value>false</Value></_State>
			</_States>
			<_Actions>
				<_Action id="Constructor">
					<_Scripts>
						<Script>
							me.setState('text',parent.s('cardName'));
							parent.setState('obj_text',me);
						</Script>
					</_Scripts>
				</_Action>
			</_Actions>
		</Entity>
	</Entities></Space></Form>
</Entity>