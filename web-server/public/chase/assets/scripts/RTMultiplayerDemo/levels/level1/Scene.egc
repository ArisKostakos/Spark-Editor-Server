<Entity extends="std.display.Scene2D">
	<_States>
		<_State id="name"><Value>mainScene</Value></_State>
		<State><Id>rectOpacity</Id><Type>Decimal</Type><Value>0</Value></State>
		<_State id="backgroundColor"><Value>0x201E1F</Value></_State>
	</_States>
	<Form><Space><Entities>
		<!-- Game Manager (non-visual) -->
		<Entity extends="RTMultiplayerDemo.levels.level1.GameManager"/>
			
		<!-- Rects -->
		<Entity extends="RTMultiplayerDemo.levels.level1.RedRect"/>
		<Entity extends="RTMultiplayerDemo.levels.level1.GreenRect"/>
		
		<!-- Maze Stuff -->
		<Entity extends="RTMultiplayerDemo.levels.level1.MazeArea"/>
	</Entities></Space></Form>
	
	<_Actions>
		<_Action id="Constructor">
			<_Scripts>
				<Script><![CDATA[
				
				/*
					for (i=0;i<20;i++)
					{
						for (j=0;j<20;j++)
						{
							var tile = Logic.create('std.display.Image2D');
							tile.set('2DMeshImageForm','Background');
							tile.set('physicsEntity',false);
							tile.set('spaceX',200*i-600);
							tile.set('spaceY',200*j-600);
							me.addChild(tile);
						}
					}
					
					*/
					
					e('Game Manager').fa('Create Match');
				]]></Script>
			</_Scripts>
		</_Action>
			
		<Action>
			<Id>WaitFor</Id>
			<Concurrency>Persistent</Concurrency>
			<Scripts>
				<Script><![CDATA[
					it.addToState('delayCurrent',Logic.getDt());
					
					if (it.getState('delayCurrent')>it.getState('delay'))
					{
						me.stopAction('WaitFor');
						
						//Callback (Action finished)
						it.setState('delayCurrent',0);
						it.s('cbEntity').fa(it.s('cbAction'));
					}
				]]></Script>
			</Scripts>
			<States>
				<State><Id>delayCurrent</Id><Type>Decimal</Type><Value>0</Value></State>
				<State><Id>delay</Id><Type>Decimal</Type><Value>0</Value></State>
				<State><Id>cbEntity</Id><Type>Dynamic</Type><Value>null</Value></State>
				<State><Id>cbAction</Id><Type>Text</Type><Value>Undefined</Value></State>
			</States>
		</Action>
	</_Actions>
</Entity>