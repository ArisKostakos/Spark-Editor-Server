<Entity extends="std.display.Scene2D">
	<_States>
		<_State id="name"><Value>mainScene</Value></_State>
		<State><Id>rectOpacity</Id><Type>Decimal</Type><Value>0</Value></State>
		<_State id="backgroundColor"><Value>0x201E1F</Value></_State>
		<State><Id>LagComp</Id><Type>Boolean</Type><Value>false</Value></State>
	</_States>
	<Form><Space><Entities>
		<!-- Game Manager (non-visual) -->
		<Entity extends="Dodgeball.levels.level1.GameManager"/>
			
		<!-- Rects -->
		<Entity extends="Dodgeball.levels.level1.RedRect"/>
		<Entity extends="Dodgeball.levels.level1.GreenRect"/>
		
		
		<Entity extends="std.display.Image2D">
			<_States>
				<_State id="touchable"><Value>false</Value></_State>
				<_State id="physicsEntity"><Value>false</Value></_State>
				<_State id="2DMeshImageForm"><Value>Background</Value></_State>
				<_State id="spaceX"><Value>;2280/2</Value></_State>
				<_State id="spaceY"><Value>;1440/2</Value></_State>
				<_State id="scaleX"><Value>1</Value></_State>
				<_State id="scaleY"><Value>1</Value></_State>
			</_States>
		</Entity>
		
		
		<Entity extends="std.display.Image2D">
			<_States>
				<_State id="touchable"><Value>true</Value></_State>
				<_State id="physicsEntity"><Value>false</Value></_State>
				<_State id="2DMeshImageForm"><Value>kUp</Value></_State>
				<_State id="spaceX"><Value>2000</Value></_State>
				<_State id="spaceY"><Value>1210</Value></_State>
				<_State id="scaleX"><Value>1</Value></_State>
				<_State id="scaleY"><Value>1</Value></_State>
			</_States>
			<_Triggers>
				<Trigger>
					<Event>MouseDown</Event>
					<Scripts>
						<Script>
							var myPlayer=e('Networking').s('players').get(e('Networking').s('nickname'));
						
							if (myPlayer!=null)
							{
								myPlayer.fa('Move Up', {flag:true} );
							}
						</Script>
					</Scripts>
				</Trigger>
						
				<Trigger>
					<Event>MouseUp</Event>
					<Scripts>
						<Script>
							var myPlayer=e('Networking').s('players').get(e('Networking').s('nickname'));
						
							if (myPlayer!=null)
							{
								myPlayer.fa('Move Up', {flag:false} );
							}
						</Script>
					</Scripts>
				</Trigger>
			</_Triggers>
		</Entity>
		
		<Entity extends="std.display.Image2D">
			<_States>
				<_State id="touchable"><Value>true</Value></_State>
				<_State id="physicsEntity"><Value>false</Value></_State>
				<_State id="2DMeshImageForm"><Value>kDown</Value></_State>
				<_State id="spaceX"><Value>2000</Value></_State>
				<_State id="spaceY"><Value>1310</Value></_State>
				<_State id="scaleX"><Value>1</Value></_State>
				<_State id="scaleY"><Value>1</Value></_State>
			</_States>
			<_Triggers>
				<Trigger>
					<Event>MouseDown</Event>
					<Scripts>
						<Script>
							var myPlayer=e('Networking').s('players').get(e('Networking').s('nickname'));
						
							if (myPlayer!=null)
							{
								myPlayer.fa('Move Down', {flag:true} );
							}
						</Script>
					</Scripts>
				</Trigger>
						
				<Trigger>
					<Event>MouseUp</Event>
					<Scripts>
						<Script>
							var myPlayer=e('Networking').s('players').get(e('Networking').s('nickname'));
						
							if (myPlayer!=null)
							{
								myPlayer.fa('Move Down', {flag:false} );
							}
						</Script>
					</Scripts>
				</Trigger>
			</_Triggers>
		</Entity>
		
		<Entity extends="std.display.Image2D">
			<_States>
				<_State id="touchable"><Value>true</Value></_State>
				<_State id="physicsEntity"><Value>false</Value></_State>
				<_State id="2DMeshImageForm"><Value>kShoot</Value></_State>
				<_State id="spaceX"><Value>300</Value></_State>
				<_State id="spaceY"><Value>1275</Value></_State>
				<_State id="scaleX"><Value>1</Value></_State>
				<_State id="scaleY"><Value>1</Value></_State>
			</_States>
			<_Triggers>
				<Trigger>
					<Event>MouseLeftClick</Event>
					<Scripts>
						<Script>
							var myPlayer=e('Networking').s('players').get(e('Networking').s('nickname'));
						
							if (myPlayer!=null)
							{
								if (myPlayer.s('canShoot'))
								{
									myPlayer.set('canShoot',false);
									myPlayer.sa('WaitFor2',{delay:0.8, cbEntity:myPlayer, cbState:"canShoot", cbValue:true});
					
									Comms.notify('multiplayer.multiplayerHandler.say', {id:e('Networking').s('nickname'), type:"Client Update", message: {shoot:true} });
									
									if (e('mainScene').s('LagComp'))
										myPlayer.sa('WaitFor',{delay:0.2, cbEntity:myPlayer, cbAction:"Shoot!"});
									else
										myPlayer.fa('Shoot!');
								}
							}
						</Script>
					</Scripts>
				</Trigger>
			</_Triggers>
		</Entity>
		
		<Entity extends="std.display.Text2D">
			<_States>
				<_State id="2DMeshTextForm"><Value>defaultFont</Value></_State>
				<_State id="font"><Value>defaultFont</Value></_State>
				<_State id="spaceX"><Value>1150</Value></_State>
				<_State id="spaceY"><Value>1300</Value></_State>
				<_State id="align"><Value>Left</Value></_State>
				<_State id="scaleX"><Value>1.5</Value></_State>
				<_State id="scaleY"><Value>1.5</Value></_State>
				<_State id="physicsEntity"><Value>false</Value></_State>
				<_State id="text"><Value>Lag Compensation OFF!</Value></_State>
				<_State id="name"><Value>LagCompText</Value></_State>
				<_State id="touchable"><Value>true</Value></_State>
			</_States>
			<_Triggers>
				<Trigger>
					<Event>MouseLeftClick</Event>
					<Scripts>
						<Script>
							if (e('mainScene').s('LagComp'))
								e('mainScene').fa('LagOff');
							else
								e('mainScene').fa('LagOn');
						</Script>
					</Scripts>
				</Trigger>
			</_Triggers>
		</Entity>
		
	</Entities></Space></Form>
	
	<_Actions>
		<Action>
			<Id>LagOn</Id>
			<Concurrency>Persistent</Concurrency>
			<Scripts>
				<Script>
					//forced
					
					me.set('LagComp',true);
					e('LagCompText').set('text', 'Lag Compensation ON!');
					
					Comms.notify('multiplayer.multiplayerHandler.say', {id:e('Networking').s('nickname'), type:"Lag Update", message: {on:true} });
				</Script>
			</Scripts>
		</Action>
		
		<Action>
			<Id>LagOff</Id>
			<Concurrency>Persistent</Concurrency>
			<Scripts>
				<Script>
					//forced
					
					me.set('LagComp',false);
					e('LagCompText').set('text', 'Lag Compensation OFF!');
					
					Comms.notify('multiplayer.multiplayerHandler.say', {id:e('Networking').s('nickname'), type:"Lag Update", message: {on:false} });
				</Script>
			</Scripts>
		</Action>
		
		<_Action id="Constructor">
			<_Scripts>
				<Script><![CDATA[
				
				/*
					for (i=0;i<20;i++)
					{
						for (j=0;j<20;j++)
						{
							var tile = Logic.create('std.display.Image2D');
							tile.set('2DMeshImageForm','Background');
							tile.set('physicsEntity',false);
							tile.set('spaceX',200*i-600);
							tile.set('spaceY',200*j-600);
							me.addChild(tile);
						}
					}
					
					*/
					
					e('Game Manager').fa('Create Match');
				]]></Script>
			</_Scripts>
		</_Action>
			
		<Action>
			<Id>WaitFor</Id>
			<Concurrency>Persistent</Concurrency>
			<Scripts>
				<Script><![CDATA[
					it.addToState('delayCurrent',Logic.getDt());
					
					if (it.getState('delayCurrent')>it.getState('delay'))
					{
						me.stopAction('WaitFor');
						
						//Callback (Action finished)
						it.setState('delayCurrent',0);
						it.s('cbEntity').fa(it.s('cbAction'));
					}
				]]></Script>
			</Scripts>
			<States>
				<State><Id>delayCurrent</Id><Type>Decimal</Type><Value>0</Value></State>
				<State><Id>delay</Id><Type>Decimal</Type><Value>0</Value></State>
				<State><Id>cbEntity</Id><Type>Dynamic</Type><Value>null</Value></State>
				<State><Id>cbAction</Id><Type>Text</Type><Value>Undefined</Value></State>
			</States>
		</Action>
	</_Actions>
</Entity>