<Entity extends="std.display.Sprite2D">
	<_States>
		<!--<_State id="physicsEntity"><Value>false</Value></_State>-->
		<State><Id>nickname</Id><Type>Text</Type><Value>Undefined</Value></State>
		<State><Id>color</Id><Type>Text</Type><Value>Undefined</Value></State>
		<_State id="scaleX"><Value>0.8</Value></_State>
		<_State id="scaleY"><Value>0.8</Value></_State>
		<State><Id>speed</Id><Type>Integer</Type><Value>600</Value></State>
		<State><Id>image</Id><Type>Dynamic</Type><Value>null</Value></State>
		<State><Id>type</Id><Type>Text</Type><Value>Undefined</Value></State>
		<State><Id>up</Id><Type>Boolean</Type><Value>false</Value></State>
		<State><Id>down</Id><Type>Boolean</Type><Value>false</Value></State>
		<State><Id>shoot</Id><Type>Boolean</Type><Value>false</Value></State>
		<State><Id>canShoot</Id><Type>Boolean</Type><Value>true</Value></State>
	</_States>
		
	<Form><Space><Entities>
		<Entity extends="std.display.Text2D">
			<_States>
				<_State id="2DMeshTextForm"><Value>defaultFont</Value></_State>
				<_State id="font"><Value>defaultFont</Value></_State>
				<_State id="spaceX"><Value>0</Value></_State>
				<_State id="spaceY"><Value>-160</Value></_State>
				<_State id="align"><Value>Left</Value></_State>
				<_State id="scaleX"><Value>0.8</Value></_State>
				<_State id="scaleY"><Value>0.8</Value></_State>
				<_State id="physicsEntity"><Value>false</Value></_State>
			</_States>
			<_Actions>
				<_Action id="Constructor">
					<_Scripts>
						<Script>
							me.set('text',parent.s('nickname') );
						</Script>
					</_Scripts>
				</_Action>
			</_Actions>
		</Entity>
		
		<Entity extends="std.display.Image2D">
			<_States>
				<_State id="visible"><Value>true</Value></_State>
				<_State id="scaleX"><Value>1</Value></_State>
				<_State id="scaleY"><Value>1</Value></_State>
				<_State id="spaceX"><Value>0</Value></_State>
				<_State id="spaceY"><Value>0</Value></_State>
				<_State id="physicsEntity"><Value>false</Value></_State>
			</_States>
			<_Actions>
				<_Action id="Constructor">
					<_Scripts>
						<Script>
							parent.set('image',me );
							me.set('2DMeshImageForm',parent.s('color'));
						</Script>
					</_Scripts>
				</_Action>
			</_Actions>
		</Entity>
	</Entities></Space></Form>
	
	<_Actions>
		<_Action id="Constructor">
			<_Scripts>
				<Script>
					me.startAction('Move And Shoot');
				</Script>
			</_Scripts>
		</_Action>
			
		<Action>
			<Id>Move And Shoot</Id>
			<Concurrency>Persistent</Concurrency>
			<Scripts>
				<Script><![CDATA[
					var up = me.s('up');
					var down = me.s('down');
					
					
					if ( (up && !down) || (!up && down) )
					{
						//Find Speed
						var speed = me.s('speed')*Logic.getDt();
						
						if (up)
							speed*= -1;
						
						me.addToState('spaceY', speed);
					}
					
					
					//Limiters
					var l_spaceY = me.s('spaceY');
					
					if (l_spaceY<530)
						me.set('spaceY',530);
					else if (l_spaceY>1030)
						me.set('spaceY',1030);
					//Display.de('my spaceY: ' + me.s('spaceY') );
					
					if (me.s('shoot'))
					{
						if (me.s('visible'))
						{
							var ball = Logic.create('Dodgeball.levels.level1.Ball');
							ball.setState('spaceX', me.s('spaceX'));
							ball.setState('spaceY', me.s('spaceY'));
							
							if (me.s('type')=='Alf')
							{
								ball.setState('myTarget','Harry');
								ball.setState('dir','left');
							}
							else
							{
								ball.setState('myTarget','Alf');
								ball.setState('dir','right');
							}
							
							
							e('mainScene').addChild(ball);
						}
						
						me.set('shoot', false);
					}
					
					if (me.s('nickname')==e('Networking').s('nickname'))
						if (!e('mainScene').s('LagComp'))
							Comms.notify('multiplayer.multiplayerHandler.say', {id:e('Networking').s('nickname'), type:"Client Update", message: {y:me.s('spaceY')} });
				]]></Script>
			</Scripts>
		</Action>
	
		<Action>
			<Id>Move Up</Id>
			<Concurrency>Persistent</Concurrency>
			<Scripts>
				<Script>
					if (me.s('nickname')==e('Networking').s('nickname'))
					{
						me.set('up', it.s('flag') );
						
						if (e('mainScene').s('LagComp'))
							Comms.notify('multiplayer.multiplayerHandler.say', {id:e('Networking').s('nickname'), type:"Client Update", message: {y:me.s('spaceY'), up:me.s('up'), down:me.s('down')} });
					}
				</Script>
			</Scripts>
			<States>
				<State><Id>flag</Id><Type>Boolean</Type><Value>false</Value></State>
			</States>
		</Action>
	
		<Action>
			<Id>Move Down</Id>
			<Concurrency>Persistent</Concurrency>
			<Scripts>
				<Script>
					if (me.s('nickname')==e('Networking').s('nickname'))
					{
						me.set('down', it.s('flag') );
						
						if (e('mainScene').s('LagComp'))
							Comms.notify('multiplayer.multiplayerHandler.say', {id:e('Networking').s('nickname'), type:"Client Update", message: {y:me.s('spaceY'), up:me.s('up'), down:me.s('down')} });
					}
				</Script>
			</Scripts>
			<States>
				<State><Id>flag</Id><Type>Boolean</Type><Value>false</Value></State>
			</States>
		</Action>
				
				
		<Action>
			<Id>WaitFor</Id>
			<Concurrency>Persistent</Concurrency>
			<Scripts>
				<Script><![CDATA[
					it.addToState('delayCurrent',Logic.getDt());
					
					if (it.getState('delayCurrent')>it.getState('delay'))
					{
						me.stopAction('WaitFor');
						
						//Callback (Action finished)
						it.setState('delayCurrent',0);
						it.s('cbEntity').fa(it.s('cbAction'));
					}
				]]></Script>
			</Scripts>
			<States>
				<State><Id>delayCurrent</Id><Type>Decimal</Type><Value>0</Value></State>
				<State><Id>delay</Id><Type>Decimal</Type><Value>0</Value></State>
				<State><Id>cbEntity</Id><Type>Dynamic</Type><Value>null</Value></State>
				<State><Id>cbAction</Id><Type>Text</Type><Value>Undefined</Value></State>
			</States>
		</Action>
		
		<Action>
			<Id>WaitFor2</Id>
			<Concurrency>Persistent</Concurrency>
			<Scripts>
				<Script><![CDATA[
					it.addToState('delayCurrent',Logic.getDt());
					
					if (it.getState('delayCurrent')>it.getState('delay'))
					{
						me.stopAction('WaitFor2');
						
						//Callback (Action finished)
						it.setState('delayCurrent',0);
						it.s('cbEntity').set(it.s('cbState'),it.s('cbValue'));
					}
				]]></Script>
			</Scripts>
			<States>
				<State><Id>delayCurrent</Id><Type>Decimal</Type><Value>0</Value></State>
				<State><Id>delay</Id><Type>Decimal</Type><Value>0</Value></State>
				<State><Id>cbEntity</Id><Type>Dynamic</Type><Value>null</Value></State>
				<State><Id>cbState</Id><Type>Text</Type><Value>Undefined</Value></State>
				<State><Id>cbValue</Id><Type>Boolean</Type><Value>false</Value></State>
			</States>
		</Action>
				
		<Action>
			<Id>WaitFor3</Id>
			<Concurrency>Persistent</Concurrency>
			<Scripts>
				<Script><![CDATA[
					it.addToState('delayCurrent',Logic.getDt());
					
					if (it.getState('delayCurrent')>it.getState('delay'))
					{
						me.stopAction('WaitFor3');
						
						//Callback (Action finished)
						it.setState('delayCurrent',0);
						it.s('cbEntity').set(it.s('cbState'),it.s('cbValue'));
					}
				]]></Script>
			</Scripts>
			<States>
				<State><Id>delayCurrent</Id><Type>Decimal</Type><Value>0</Value></State>
				<State><Id>delay</Id><Type>Decimal</Type><Value>0</Value></State>
				<State><Id>cbEntity</Id><Type>Dynamic</Type><Value>null</Value></State>
				<State><Id>cbState</Id><Type>Text</Type><Value>Undefined</Value></State>
				<State><Id>cbValue</Id><Type>Boolean</Type><Value>false</Value></State>
			</States>
		</Action>
				
		<Action>
			<Id>Shoot!</Id>
			<Concurrency>Persistent</Concurrency>
			<Scripts>
				<Script>
					//forced
					
					me.set('shoot', true);
					
				</Script>
			</Scripts>
		</Action>
				
		<Action>
			<Id>Timeout</Id>
			<Concurrency>Persistent</Concurrency>
			<Scripts>
				<Script>
					me.set('visible',false);
					
					me.sa('WaitFor3',{delay:2, cbEntity:me, cbState:"visible", cbValue:true});
				</Script>
			</Scripts>
		</Action>
	</_Actions>
	
	<_Triggers>
		<!-- shoot -->
		<Trigger>
			<Event>KeyPressed</Event>
			<Parameter>Space</Parameter>
			<Target>TargetNone</Target>
			<Scripts>
				<Script>
					if (me.s('nickname')==e('Networking').s('nickname'))
					{
						if (me.s('canShoot'))
						{
							me.set('canShoot',false);
							me.sa('WaitFor2',{delay:0.8, cbEntity:me, cbState:"canShoot", cbValue:true});
						
							Comms.notify('multiplayer.multiplayerHandler.say', {id:e('Networking').s('nickname'), type:"Client Update", message: {shoot:true} });
							
							if (e('mainScene').s('LagComp'))
								me.sa('WaitFor',{delay:0.2, cbEntity:me, cbAction:"Shoot!"});
							else
								me.fa('Shoot!');
						}
					}
				</Script>
			</Scripts>
		</Trigger>
		
		<!-- wasd -->
		<Trigger>
			<Event>KeyPressed</Event>
			<Parameter>W</Parameter>
			<Target>TargetNone</Target>
			<Scripts>
				<Script>
					if (me.s('nickname')==e('Networking').s('nickname'))
					{
						me.fa('Move Up', {flag:true} );
					}
				</Script>
			</Scripts>
		</Trigger>
		
		<Trigger>
			<Event>KeyReleased</Event>
			<Parameter>W</Parameter>
			<Target>TargetNone</Target>
			<Scripts>
				<Script>
					if (me.s('nickname')==e('Networking').s('nickname'))
					{
						me.fa('Move Up', {flag:false} );
					}
				</Script>
			</Scripts>
		</Trigger>
		
		<Trigger>
			<Event>KeyPressed</Event>
			<Parameter>S</Parameter>
			<Target>TargetNone</Target>
			<Scripts>
				<Script>
					if (me.s('nickname')==e('Networking').s('nickname'))
					{
						me.fa('Move Down', {flag:true} );
					}
				</Script>
			</Scripts>
		</Trigger>
		
		<Trigger>
			<Event>KeyReleased</Event>
			<Parameter>S</Parameter>
			<Target>TargetNone</Target>
			<Scripts>
				<Script>
					if (me.s('nickname')==e('Networking').s('nickname'))
					{
						me.fa('Move Down', {flag:false} );
					}
				</Script>
			</Scripts>
		</Trigger>
		
		<!--Arrow Keys -->
		<Trigger>
			<Event>KeyPressed</Event>
			<Parameter>Up</Parameter>
			<Target>TargetNone</Target>
			<Scripts>
				<Script>
					if (me.s('nickname')==e('Networking').s('nickname'))
					{
						me.fa('Move Up', {flag:true} );
					}
				</Script>
			</Scripts>
		</Trigger>
		
		<Trigger>
			<Event>KeyReleased</Event>
			<Parameter>Up</Parameter>
			<Target>TargetNone</Target>
			<Scripts>
				<Script>
					if (me.s('nickname')==e('Networking').s('nickname'))
					{
						me.fa('Move Up', {flag:false} );
					}
				</Script>
			</Scripts>
		</Trigger>
		
		<Trigger>
			<Event>KeyPressed</Event>
			<Parameter>Down</Parameter>
			<Target>TargetNone</Target>
			<Scripts>
				<Script>
					if (me.s('nickname')==e('Networking').s('nickname'))
					{
						me.fa('Move Down', {flag:true} );
					}
				</Script>
			</Scripts>
		</Trigger>
		
		<Trigger>
			<Event>KeyReleased</Event>
			<Parameter>Down</Parameter>
			<Target>TargetNone</Target>
			<Scripts>
				<Script>
					if (me.s('nickname')==e('Networking').s('nickname'))
					{
						me.fa('Move Down', {flag:false} );
					}
				</Script>
			</Scripts>
		</Trigger>
	</_Triggers>
</Entity>